{
  "format_version": "1.2",
  "terraform_version": "1.8.4",
  "variables": {
    "aws_region": {
      "value": "eu-west-3"
    },
    "cluster_endpoint_private_access": {
      "value": false
    },
    "cluster_endpoint_public_access": {
      "value": true
    },
    "cluster_endpoint_public_access_cidrs": {
      "value": [
        "0.0.0.0/0"
      ]
    },
    "cluster_name": {
      "value": "eks-sockshop"
    },
    "cluster_service_ipv4_cidr": {
      "value": null
    },
    "cluster_version": {
      "value": null
    },
    "environment": {
      "value": "dev"
    },
    "instance_keypair": {
      "value": "eks-terraform-key"
    },
    "instance_type": {
      "value": "t3.micro"
    },
    "office": {
      "value": "sockshop"
    },
    "vpc_cidr_block": {
      "value": "10.0.0.0/16"
    },
    "vpc_create_database_subnet_group": {
      "value": true
    },
    "vpc_create_database_subnet_route_table": {
      "value": true
    },
    "vpc_database_subnets": {
      "value": [
        "10.0.151.0/24",
        "10.0.152.0/24"
      ]
    },
    "vpc_enable_nat_gateway": {
      "value": true
    },
    "vpc_name": {
      "value": "vpc"
    },
    "vpc_private_subnets": {
      "value": [
        "10.0.1.0/24",
        "10.0.2.0/24"
      ]
    },
    "vpc_public_subnets": {
      "value": [
        "10.0.101.0/24",
        "10.0.102.0/24"
      ]
    },
    "vpc_single_nat_gateway": {
      "value": true
    }
  },
  "planned_values": {
    "outputs": {
      "aws_iam_openid_connect_provider_arn": {
        "sensitive": false
      },
      "aws_iam_openid_connect_provider_extract_from_arn": {
        "sensitive": false
      },
      "cluster_arn": {
        "sensitive": false
      },
      "cluster_certificate_authority_data": {
        "sensitive": false
      },
      "cluster_endpoint": {
        "sensitive": false
      },
      "cluster_iam_role_arn": {
        "sensitive": false
      },
      "cluster_iam_role_name": {
        "sensitive": false,
        "type": "string",
        "value": "sockshop-dev-eks-master-role"
      },
      "cluster_id": {
        "sensitive": false
      },
      "cluster_name": {
        "sensitive": false,
        "type": "string",
        "value": "sockshop-dev-eks"
      },
      "cluster_oidc_issuer_url": {
        "sensitive": false
      },
      "cluster_primary_security_group_id": {
        "sensitive": false
      },
      "cluster_version": {
        "sensitive": false
      },
      "private_subnets": {
        "sensitive": false
      },
      "public_subnets": {
        "sensitive": false
      },
      "region": {
        "sensitive": false,
        "type": "string",
        "value": "eu-west-3"
      },
      "vpc_id": {
        "sensitive": false
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "data.aws_eks_cluster_auth.cluster",
          "mode": "data",
          "type": "aws_eks_cluster_auth",
          "name": "cluster",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
            "token": true
          }
        }
      ],
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.eks.aws_eks_cluster.eks_cluster",
              "mode": "managed",
              "type": "aws_eks_cluster",
              "name": "eks_cluster",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "enabled_cluster_log_types": [
                  "api",
                  "audit",
                  "authenticator",
                  "controllerManager",
                  "scheduler"
                ],
                "encryption_config": [],
                "kubernetes_network_config": [
                  {}
                ],
                "name": "sockshop-dev-eks",
                "outpost_config": [],
                "tags": null,
                "timeouts": null,
                "vpc_config": [
                  {
                    "endpoint_private_access": false,
                    "endpoint_public_access": true,
                    "public_access_cidrs": [
                      "0.0.0.0/0"
                    ],
                    "security_group_ids": null
                  }
                ]
              },
              "sensitive_values": {
                "access_config": [],
                "certificate_authority": [],
                "enabled_cluster_log_types": [
                  false,
                  false,
                  false,
                  false,
                  false
                ],
                "encryption_config": [],
                "identity": [],
                "kubernetes_network_config": [
                  {}
                ],
                "outpost_config": [],
                "tags_all": {},
                "vpc_config": [
                  {
                    "public_access_cidrs": [
                      false
                    ],
                    "subnet_ids": []
                  }
                ]
              }
            },
            {
              "address": "module.eks.aws_eks_node_group.eks_ng_private",
              "mode": "managed",
              "type": "aws_eks_node_group",
              "name": "eks_ng_private",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "ami_type": "AL2_x86_64",
                "capacity_type": "ON_DEMAND",
                "cluster_name": "sockshop-dev-eks",
                "disk_size": 20,
                "force_update_version": null,
                "instance_types": [
                  "t3.medium"
                ],
                "labels": null,
                "launch_template": [],
                "node_group_name": "sockshop-dev-eks-ng-private",
                "remote_access": [
                  {
                    "ec2_ssh_key": "eks-terraform-key",
                    "source_security_group_ids": null
                  }
                ],
                "scaling_config": [
                  {
                    "desired_size": 1,
                    "max_size": 2,
                    "min_size": 1
                  }
                ],
                "tags": {
                  "Name": "Private-Node-Group"
                },
                "tags_all": {
                  "Name": "Private-Node-Group"
                },
                "taint": [],
                "timeouts": null,
                "update_config": [
                  {
                    "max_unavailable": 1,
                    "max_unavailable_percentage": null
                  }
                ]
              },
              "sensitive_values": {
                "instance_types": [
                  false
                ],
                "launch_template": [],
                "remote_access": [
                  {}
                ],
                "resources": [],
                "scaling_config": [
                  {}
                ],
                "subnet_ids": [],
                "tags": {},
                "tags_all": {},
                "taint": [],
                "update_config": [
                  {}
                ]
              }
            },
            {
              "address": "module.eks.aws_iam_group.eksadmins_iam_group",
              "mode": "managed",
              "type": "aws_iam_group",
              "name": "eksadmins_iam_group",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "name": "sockshop-dev-eksadmins",
                "path": "/"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_group_membership.eksadmins",
              "mode": "managed",
              "type": "aws_iam_group_membership",
              "name": "eksadmins",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "group": "sockshop-dev-eksadmins",
                "name": "sockshop-dev-eksadmins-group-membership",
                "users": [
                  "sockshop-dev-eksadmin3"
                ]
              },
              "sensitive_values": {
                "users": [
                  false
                ]
              }
            },
            {
              "address": "module.eks.aws_iam_group_policy.eksadmins_iam_group_assumerole_policy",
              "mode": "managed",
              "type": "aws_iam_group_policy",
              "name": "eksadmins_iam_group_assumerole_policy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "group": "sockshop-dev-eksadmins",
                "name": "sockshop-dev-eksadmins-group-policy"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role.eks_admin_role",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "eks_admin_role",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "description": null,
                "force_detach_policies": false,
                "inline_policy": [
                  {
                    "name": "eks-full-access-policy",
                    "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"iam:ListRoles\",\"eks:*\",\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}"
                  }
                ],
                "max_session_duration": 3600,
                "name": "sockshop-dev-eks-admin-role",
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "tag-key": "sockshop-dev-eks-admin-role"
                },
                "tags_all": {
                  "tag-key": "sockshop-dev-eks-admin-role"
                }
              },
              "sensitive_values": {
                "inline_policy": [
                  {}
                ],
                "managed_policy_arns": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_role.eks_master_role",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "eks_master_role",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                "description": null,
                "force_detach_policies": false,
                "max_session_duration": 3600,
                "name": "sockshop-dev-eks-master-role",
                "path": "/",
                "permissions_boundary": null,
                "tags": null
              },
              "sensitive_values": {
                "inline_policy": [],
                "managed_policy_arns": [],
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_role.eks_nodegroup_role",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "eks_nodegroup_role",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                "description": null,
                "force_detach_policies": false,
                "max_session_duration": 3600,
                "name": "sockshop-dev-eks-nodegroup-role",
                "path": "/",
                "permissions_boundary": null,
                "tags": null
              },
              "sensitive_values": {
                "inline_policy": [],
                "managed_policy_arns": [],
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEC2ContainerRegistryReadOnly",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "eks-AmazonEC2ContainerRegistryReadOnly",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                "role": "sockshop-dev-eks-nodegroup-role"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKSClusterPolicy",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "eks-AmazonEKSClusterPolicy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                "role": "sockshop-dev-eks-master-role"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKSVPCResourceController",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "eks-AmazonEKSVPCResourceController",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
                "role": "sockshop-dev-eks-master-role"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKSWorkerNodePolicy",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "eks-AmazonEKSWorkerNodePolicy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                "role": "sockshop-dev-eks-nodegroup-role"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKS_CNI_Policy",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "eks-AmazonEKS_CNI_Policy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                "role": "sockshop-dev-eks-nodegroup-role"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_user.admin_user",
              "mode": "managed",
              "type": "aws_iam_user",
              "name": "admin_user",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "force_destroy": true,
                "name": "sockshop-dev-eksadmin1",
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "environment": "dev",
                  "owners": "sockshop"
                },
                "tags_all": {
                  "environment": "dev",
                  "owners": "sockshop"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_user.basic_user",
              "mode": "managed",
              "type": "aws_iam_user",
              "name": "basic_user",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "force_destroy": true,
                "name": "sockshop-dev-eksadmin2",
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "environment": "dev",
                  "owners": "sockshop"
                },
                "tags_all": {
                  "environment": "dev",
                  "owners": "sockshop"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_user.eksadmin_user",
              "mode": "managed",
              "type": "aws_iam_user",
              "name": "eksadmin_user",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "force_destroy": true,
                "name": "sockshop-dev-eksadmin3",
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "environment": "dev",
                  "owners": "sockshop"
                },
                "tags_all": {
                  "environment": "dev",
                  "owners": "sockshop"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_user_policy.basic_user_eks_policy",
              "mode": "managed",
              "type": "aws_iam_user_policy",
              "name": "basic_user_eks_policy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "name": "sockshop-dev-eks-dashboard-full-access-policy",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"iam:ListRoles\",\"eks:*\",\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}",
                "user": "sockshop-dev-eksadmin2"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_user_policy_attachment.admin_user",
              "mode": "managed",
              "type": "aws_iam_user_policy_attachment",
              "name": "admin_user",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AdministratorAccess",
                "user": "sockshop-dev-eksadmin1"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.data.aws_caller_identity.current",
              "mode": "data",
              "type": "aws_caller_identity",
              "name": "current",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "sensitive_values": {}
            },
            {
              "address": "module.eks.kubernetes_config_map_v1.aws_auth",
              "mode": "managed",
              "type": "kubernetes_config_map_v1",
              "name": "aws_auth",
              "provider_name": "registry.terraform.io/hashicorp/kubernetes",
              "schema_version": 0,
              "values": {
                "binary_data": null,
                "immutable": null,
                "metadata": [
                  {
                    "annotations": null,
                    "generate_name": null,
                    "labels": null,
                    "name": "aws-auth",
                    "namespace": "kube-system"
                  }
                ]
              },
              "sensitive_values": {
                "data": {},
                "metadata": [
                  {}
                ]
              }
            }
          ],
          "address": "module.eks"
        },
        {
          "resources": [
            {
              "address": "module.oidc.aws_iam_openid_connect_provider.oidc_provider",
              "mode": "managed",
              "type": "aws_iam_openid_connect_provider",
              "name": "oidc_provider",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "tags": {
                  "Name": "eks-sockshop-eks-irsa",
                  "environment": "dev",
                  "owners": "architect"
                },
                "tags_all": {
                  "Name": "eks-sockshop-eks-irsa",
                  "environment": "dev",
                  "owners": "architect"
                },
                "thumbprint_list": [
                  "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                ]
              },
              "sensitive_values": {
                "client_id_list": [],
                "tags": {},
                "tags_all": {},
                "thumbprint_list": [
                  false
                ]
              }
            },
            {
              "address": "module.oidc.data.aws_partition.current",
              "mode": "data",
              "type": "aws_partition",
              "name": "current",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "sensitive_values": {}
            }
          ],
          "address": "module.oidc"
        },
        {
          "address": "module.vpc",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.vpc.module.vpc.aws_db_subnet_group.database[0]",
                  "mode": "managed",
                  "type": "aws_db_subnet_group",
                  "name": "database",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "description": "Database subnet group for sockshop-dev-eks-sockshop",
                    "name": "sockshop-dev-eks-sockshop",
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop",
                      "environment": "dev",
                      "owners": "sockshop"
                    }
                  },
                  "sensitive_values": {
                    "subnet_ids": [],
                    "supported_network_types": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_default_network_acl.this[0]",
                  "mode": "managed",
                  "type": "aws_default_network_acl",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "egress": [
                      {
                        "action": "allow",
                        "cidr_block": "",
                        "from_port": 0,
                        "icmp_code": null,
                        "icmp_type": null,
                        "ipv6_cidr_block": "::/0",
                        "protocol": "-1",
                        "rule_no": 101,
                        "to_port": 0
                      },
                      {
                        "action": "allow",
                        "cidr_block": "0.0.0.0/0",
                        "from_port": 0,
                        "icmp_code": null,
                        "icmp_type": null,
                        "ipv6_cidr_block": "",
                        "protocol": "-1",
                        "rule_no": 100,
                        "to_port": 0
                      }
                    ],
                    "ingress": [
                      {
                        "action": "allow",
                        "cidr_block": "",
                        "from_port": 0,
                        "icmp_code": null,
                        "icmp_type": null,
                        "ipv6_cidr_block": "::/0",
                        "protocol": "-1",
                        "rule_no": 101,
                        "to_port": 0
                      },
                      {
                        "action": "allow",
                        "cidr_block": "0.0.0.0/0",
                        "from_port": 0,
                        "icmp_code": null,
                        "icmp_type": null,
                        "ipv6_cidr_block": "",
                        "protocol": "-1",
                        "rule_no": 100,
                        "to_port": 0
                      }
                    ],
                    "subnet_ids": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-default",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-default",
                      "environment": "dev",
                      "owners": "sockshop"
                    }
                  },
                  "sensitive_values": {
                    "egress": [
                      {},
                      {}
                    ],
                    "ingress": [
                      {},
                      {}
                    ],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_default_route_table.default[0]",
                  "mode": "managed",
                  "type": "aws_default_route_table",
                  "name": "default",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "propagating_vgws": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-default",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-default",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": {
                      "create": "5m",
                      "update": "5m"
                    }
                  },
                  "sensitive_values": {
                    "route": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_default_security_group.this[0]",
                  "mode": "managed",
                  "type": "aws_default_security_group",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-default",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-default",
                      "environment": "dev",
                      "owners": "sockshop"
                    }
                  },
                  "sensitive_values": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_eip.nat[0]",
                  "mode": "managed",
                  "type": "aws_eip",
                  "name": "nat",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_internet_gateway.this[0]",
                  "mode": "managed",
                  "type": "aws_internet_gateway",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_nat_gateway.this[0]",
                  "mode": "managed",
                  "type": "aws_nat_gateway",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_route.private_nat_gateway[0]",
                  "mode": "managed",
                  "type": "aws_route",
                  "name": "private_nat_gateway",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {
                      "create": "5m",
                      "delete": null,
                      "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                  },
                  "sensitive_values": {
                    "timeouts": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_route.public_internet_gateway[0]",
                  "mode": "managed",
                  "type": "aws_route",
                  "name": "public_internet_gateway",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "local_gateway_id": null,
                    "nat_gateway_id": null,
                    "timeouts": {
                      "create": "5m",
                      "delete": null,
                      "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                  },
                  "sensitive_values": {
                    "timeouts": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table.database[0]",
                  "mode": "managed",
                  "type": "aws_route_table",
                  "name": "database",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-db",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-db",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table.private[0]",
                  "mode": "managed",
                  "type": "aws_route_table",
                  "name": "private",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-private",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-private",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table.public[0]",
                  "mode": "managed",
                  "type": "aws_route_table",
                  "name": "public",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-public",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-public",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table_association.database[0]",
                  "mode": "managed",
                  "type": "aws_route_table_association",
                  "name": "database",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "gateway_id": null,
                    "timeouts": null
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table_association.database[1]",
                  "mode": "managed",
                  "type": "aws_route_table_association",
                  "name": "database",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "gateway_id": null,
                    "timeouts": null
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table_association.private[0]",
                  "mode": "managed",
                  "type": "aws_route_table_association",
                  "name": "private",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "gateway_id": null,
                    "timeouts": null
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table_association.private[1]",
                  "mode": "managed",
                  "type": "aws_route_table_association",
                  "name": "private",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "gateway_id": null,
                    "timeouts": null
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table_association.public[0]",
                  "mode": "managed",
                  "type": "aws_route_table_association",
                  "name": "public",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "gateway_id": null,
                    "timeouts": null
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.vpc.module.vpc.aws_route_table_association.public[1]",
                  "mode": "managed",
                  "type": "aws_route_table_association",
                  "name": "public",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "gateway_id": null,
                    "timeouts": null
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.vpc.module.vpc.aws_subnet.database[0]",
                  "mode": "managed",
                  "type": "aws_subnet",
                  "name": "database",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-3a",
                    "cidr_block": "10.0.151.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-db-eu-west-3a",
                      "Type": "database-subnets",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-db-eu-west-3a",
                      "Type": "database-subnets",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_subnet.database[1]",
                  "mode": "managed",
                  "type": "aws_subnet",
                  "name": "database",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-3b",
                    "cidr_block": "10.0.152.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-db-eu-west-3b",
                      "Type": "database-subnets",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-db-eu-west-3b",
                      "Type": "database-subnets",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_subnet.private[0]",
                  "mode": "managed",
                  "type": "aws_subnet",
                  "name": "private",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-3a",
                    "cidr_block": "10.0.1.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-private-eu-west-3a",
                      "Type": "private-subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/internal-elb": "1",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-private-eu-west-3a",
                      "Type": "private-subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/internal-elb": "1",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_subnet.private[1]",
                  "mode": "managed",
                  "type": "aws_subnet",
                  "name": "private",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-3b",
                    "cidr_block": "10.0.2.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-private-eu-west-3b",
                      "Type": "private-subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/internal-elb": "1",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-private-eu-west-3b",
                      "Type": "private-subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/internal-elb": "1",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_subnet.public[0]",
                  "mode": "managed",
                  "type": "aws_subnet",
                  "name": "public",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-3a",
                    "cidr_block": "10.0.101.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-public-eu-west-3a",
                      "Type": "Public Subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/elb": "1",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-public-eu-west-3a",
                      "Type": "Public Subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/elb": "1",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_subnet.public[1]",
                  "mode": "managed",
                  "type": "aws_subnet",
                  "name": "public",
                  "index": 1,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "eu-west-3b",
                    "cidr_block": "10.0.102.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop-public-eu-west-3b",
                      "Type": "Public Subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/elb": "1",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop-public-eu-west-3b",
                      "Type": "Public Subnets",
                      "environment": "dev",
                      "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
                      "kubernetes.io/role/elb": "1",
                      "owners": "sockshop"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.vpc.module.vpc.aws_vpc.this[0]",
                  "mode": "managed",
                  "type": "aws_vpc",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "assign_generated_ipv6_cidr_block": null,
                    "cidr_block": "10.0.0.0/16",
                    "enable_dns_hostnames": true,
                    "enable_dns_support": true,
                    "instance_tenancy": "default",
                    "ipv4_ipam_pool_id": null,
                    "ipv4_netmask_length": null,
                    "ipv6_ipam_pool_id": null,
                    "ipv6_netmask_length": null,
                    "tags": {
                      "Name": "sockshop-dev-eks-sockshop",
                      "environment": "dev",
                      "owners": "sockshop"
                    },
                    "tags_all": {
                      "Name": "sockshop-dev-eks-sockshop",
                      "environment": "dev",
                      "owners": "sockshop"
                    }
                  },
                  "sensitive_values": {
                    "tags": {},
                    "tags_all": {}
                  }
                }
              ],
              "address": "module.vpc.module.vpc"
            }
          ]
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "data.aws_eks_cluster_auth.cluster",
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "id": true,
          "name": true,
          "token": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "token": true
        }
      },
      "action_reason": "read_because_config_unknown"
    },
    {
      "address": "module.eks.data.aws_caller_identity.current",
      "module_address": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "account_id": true,
          "arn": true,
          "id": true,
          "user_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      },
      "action_reason": "read_because_dependency_pending"
    },
    {
      "address": "module.eks.aws_eks_cluster.eks_cluster",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "eks_cluster",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "enabled_cluster_log_types": [
            "api",
            "audit",
            "authenticator",
            "controllerManager",
            "scheduler"
          ],
          "encryption_config": [],
          "kubernetes_network_config": [
            {}
          ],
          "name": "sockshop-dev-eks",
          "outpost_config": [],
          "tags": null,
          "timeouts": null,
          "vpc_config": [
            {
              "endpoint_private_access": false,
              "endpoint_public_access": true,
              "public_access_cidrs": [
                "0.0.0.0/0"
              ],
              "security_group_ids": null
            }
          ]
        },
        "after_unknown": {
          "access_config": true,
          "arn": true,
          "certificate_authority": true,
          "cluster_id": true,
          "created_at": true,
          "enabled_cluster_log_types": [
            false,
            false,
            false,
            false,
            false
          ],
          "encryption_config": [],
          "endpoint": true,
          "id": true,
          "identity": true,
          "kubernetes_network_config": [
            {
              "ip_family": true,
              "service_ipv4_cidr": true,
              "service_ipv6_cidr": true
            }
          ],
          "outpost_config": [],
          "platform_version": true,
          "role_arn": true,
          "status": true,
          "tags_all": true,
          "version": true,
          "vpc_config": [
            {
              "cluster_security_group_id": true,
              "public_access_cidrs": [
                false
              ],
              "subnet_ids": true,
              "vpc_id": true
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "access_config": [],
          "certificate_authority": [],
          "enabled_cluster_log_types": [
            false,
            false,
            false,
            false,
            false
          ],
          "encryption_config": [],
          "identity": [],
          "kubernetes_network_config": [
            {}
          ],
          "outpost_config": [],
          "tags_all": {},
          "vpc_config": [
            {
              "public_access_cidrs": [
                false
              ],
              "subnet_ids": []
            }
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_eks_node_group.eks_ng_private",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "eks_ng_private",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ami_type": "AL2_x86_64",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "sockshop-dev-eks",
          "disk_size": 20,
          "force_update_version": null,
          "instance_types": [
            "t3.medium"
          ],
          "labels": null,
          "launch_template": [],
          "node_group_name": "sockshop-dev-eks-ng-private",
          "remote_access": [
            {
              "ec2_ssh_key": "eks-terraform-key",
              "source_security_group_ids": null
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 2,
              "min_size": 1
            }
          ],
          "tags": {
            "Name": "Private-Node-Group"
          },
          "tags_all": {
            "Name": "Private-Node-Group"
          },
          "taint": [],
          "timeouts": null,
          "update_config": [
            {
              "max_unavailable": 1,
              "max_unavailable_percentage": null
            }
          ]
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "instance_types": [
            false
          ],
          "launch_template": [],
          "node_group_name_prefix": true,
          "node_role_arn": true,
          "release_version": true,
          "remote_access": [
            {}
          ],
          "resources": true,
          "scaling_config": [
            {}
          ],
          "status": true,
          "subnet_ids": true,
          "tags": {},
          "tags_all": {},
          "taint": [],
          "update_config": [
            {}
          ],
          "version": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "instance_types": [
            false
          ],
          "launch_template": [],
          "remote_access": [
            {}
          ],
          "resources": [],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "update_config": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_iam_group.eksadmins_iam_group",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_group",
      "name": "eksadmins_iam_group",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "sockshop-dev-eksadmins",
          "path": "/"
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_group_membership.eksadmins",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_group_membership",
      "name": "eksadmins",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "group": "sockshop-dev-eksadmins",
          "name": "sockshop-dev-eksadmins-group-membership",
          "users": [
            "sockshop-dev-eksadmin3"
          ]
        },
        "after_unknown": {
          "id": true,
          "users": [
            false
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "users": [
            false
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_iam_group_policy.eksadmins_iam_group_assumerole_policy",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_group_policy",
      "name": "eksadmins_iam_group_assumerole_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "group": "sockshop-dev-eksadmins",
          "name": "sockshop-dev-eksadmins-group-policy"
        },
        "after_unknown": {
          "id": true,
          "name_prefix": true,
          "policy": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role.eks_admin_role",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "eks_admin_role",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": null,
          "force_detach_policies": false,
          "inline_policy": [
            {
              "name": "eks-full-access-policy",
              "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"iam:ListRoles\",\"eks:*\",\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}"
            }
          ],
          "max_session_duration": 3600,
          "name": "sockshop-dev-eks-admin-role",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "tag-key": "sockshop-dev-eks-admin-role"
          },
          "tags_all": {
            "tag-key": "sockshop-dev-eks-admin-role"
          }
        },
        "after_unknown": {
          "arn": true,
          "assume_role_policy": true,
          "create_date": true,
          "id": true,
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": true,
          "name_prefix": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role.eks_master_role",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "eks_master_role",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name": "sockshop-dev-eks-master-role",
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name_prefix": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role.eks_nodegroup_role",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "eks_nodegroup_role",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name": "sockshop-dev-eks-nodegroup-role",
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name_prefix": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEC2ContainerRegistryReadOnly",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEC2ContainerRegistryReadOnly",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "sockshop-dev-eks-nodegroup-role"
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKSClusterPolicy",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKSClusterPolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "role": "sockshop-dev-eks-master-role"
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKSVPCResourceController",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKSVPCResourceController",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
          "role": "sockshop-dev-eks-master-role"
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKSWorkerNodePolicy",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKSWorkerNodePolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "sockshop-dev-eks-nodegroup-role"
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.eks-AmazonEKS_CNI_Policy",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKS_CNI_Policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "sockshop-dev-eks-nodegroup-role"
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_user.admin_user",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_user",
      "name": "admin_user",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "force_destroy": true,
          "name": "sockshop-dev-eksadmin1",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "environment": "dev",
            "owners": "sockshop"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_user.basic_user",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_user",
      "name": "basic_user",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "force_destroy": true,
          "name": "sockshop-dev-eksadmin2",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "environment": "dev",
            "owners": "sockshop"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_user.eksadmin_user",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_user",
      "name": "eksadmin_user",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "force_destroy": true,
          "name": "sockshop-dev-eksadmin3",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "environment": "dev",
            "owners": "sockshop"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_user_policy.basic_user_eks_policy",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_user_policy",
      "name": "basic_user_eks_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "sockshop-dev-eks-dashboard-full-access-policy",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"iam:ListRoles\",\"eks:*\",\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}",
          "user": "sockshop-dev-eksadmin2"
        },
        "after_unknown": {
          "id": true,
          "name_prefix": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_user_policy_attachment.admin_user",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_user_policy_attachment",
      "name": "admin_user",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AdministratorAccess",
          "user": "sockshop-dev-eksadmin1"
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.kubernetes_config_map_v1.aws_auth",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "kubernetes_config_map_v1",
      "name": "aws_auth",
      "provider_name": "registry.terraform.io/hashicorp/kubernetes",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "binary_data": null,
          "immutable": null,
          "metadata": [
            {
              "annotations": null,
              "generate_name": null,
              "labels": null,
              "name": "aws-auth",
              "namespace": "kube-system"
            }
          ]
        },
        "after_unknown": {
          "data": true,
          "id": true,
          "metadata": [
            {
              "generation": true,
              "resource_version": true,
              "uid": true
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "data": {},
          "metadata": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.oidc.data.aws_partition.current",
      "module_address": "module.oidc",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "dns_suffix": true,
          "id": true,
          "partition": true,
          "reverse_dns_prefix": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      },
      "action_reason": "read_because_dependency_pending"
    },
    {
      "address": "module.oidc.aws_iam_openid_connect_provider.oidc_provider",
      "module_address": "module.oidc",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Name": "eks-sockshop-eks-irsa",
            "environment": "dev",
            "owners": "architect"
          },
          "tags_all": {
            "Name": "eks-sockshop-eks-irsa",
            "environment": "dev",
            "owners": "architect"
          },
          "thumbprint_list": [
            "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
          ]
        },
        "after_unknown": {
          "arn": true,
          "client_id_list": true,
          "id": true,
          "tags": {},
          "tags_all": {},
          "thumbprint_list": [
            false
          ],
          "url": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "client_id_list": [],
          "tags": {},
          "tags_all": {},
          "thumbprint_list": [
            false
          ]
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_db_subnet_group.database[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_db_subnet_group",
      "name": "database",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Database subnet group for sockshop-dev-eks-sockshop",
          "name": "sockshop-dev-eks-sockshop",
          "tags": {
            "Name": "sockshop-dev-eks-sockshop",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop",
            "environment": "dev",
            "owners": "sockshop"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "name_prefix": true,
          "subnet_ids": true,
          "supported_network_types": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "subnet_ids": [],
          "supported_network_types": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_default_network_acl.this[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "egress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "ingress": [
            {
              "action": "allow",
              "cidr_block": "",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "::/0",
              "protocol": "-1",
              "rule_no": 101,
              "to_port": 0
            },
            {
              "action": "allow",
              "cidr_block": "0.0.0.0/0",
              "from_port": 0,
              "icmp_code": null,
              "icmp_type": null,
              "ipv6_cidr_block": "",
              "protocol": "-1",
              "rule_no": 100,
              "to_port": 0
            }
          ],
          "subnet_ids": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-default",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-default",
            "environment": "dev",
            "owners": "sockshop"
          }
        },
        "after_unknown": {
          "arn": true,
          "default_network_acl_id": true,
          "egress": [
            {},
            {}
          ],
          "id": true,
          "ingress": [
            {},
            {}
          ],
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {},
            {}
          ],
          "ingress": [
            {},
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_default_route_table.default[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "propagating_vgws": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-default",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-default",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": {
            "create": "5m",
            "update": "5m"
          }
        },
        "after_unknown": {
          "arn": true,
          "default_route_table_id": true,
          "id": true,
          "owner_id": true,
          "route": true,
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "route": [],
          "tags": {},
          "tags_all": {},
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_default_security_group.this[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-default",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-default",
            "environment": "dev",
            "owners": "sockshop"
          }
        },
        "after_unknown": {
          "arn": true,
          "description": true,
          "egress": true,
          "id": true,
          "ingress": true,
          "name": true,
          "name_prefix": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_eip.nat[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "address": null,
          "associate_with_private_ip": null,
          "customer_owned_ipv4_pool": null,
          "domain": "vpc",
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "allocation_id": true,
          "arn": true,
          "association_id": true,
          "carrier_ip": true,
          "customer_owned_ip": true,
          "id": true,
          "instance": true,
          "network_border_group": true,
          "network_interface": true,
          "private_dns": true,
          "private_ip": true,
          "ptr_record": true,
          "public_dns": true,
          "public_ip": true,
          "public_ipv4_pool": true,
          "tags": {},
          "tags_all": {},
          "vpc": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_internet_gateway.this[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Name": "sockshop-dev-eks-sockshop",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_nat_gateway.this[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "connectivity_type": "public",
          "secondary_allocation_ids": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-eu-west-3a",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "allocation_id": true,
          "association_id": true,
          "id": true,
          "network_interface_id": true,
          "private_ip": true,
          "public_ip": true,
          "secondary_private_ip_address_count": true,
          "secondary_private_ip_addresses": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "secondary_private_ip_addresses": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route.private_nat_gateway[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "carrier_gateway_id": null,
          "core_network_arn": null,
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": null,
          "destination_prefix_list_id": null,
          "egress_only_gateway_id": null,
          "gateway_id": null,
          "local_gateway_id": null,
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": null,
          "vpc_endpoint_id": null,
          "vpc_peering_connection_id": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "instance_owner_id": true,
          "nat_gateway_id": true,
          "network_interface_id": true,
          "origin": true,
          "route_table_id": true,
          "state": true,
          "timeouts": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route.public_internet_gateway[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "carrier_gateway_id": null,
          "core_network_arn": null,
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": null,
          "destination_prefix_list_id": null,
          "egress_only_gateway_id": null,
          "local_gateway_id": null,
          "nat_gateway_id": null,
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": null,
          "vpc_endpoint_id": null,
          "vpc_peering_connection_id": null
        },
        "after_unknown": {
          "gateway_id": true,
          "id": true,
          "instance_id": true,
          "instance_owner_id": true,
          "network_interface_id": true,
          "origin": true,
          "route_table_id": true,
          "state": true,
          "timeouts": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table.database[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "database",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-db",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-db",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "propagating_vgws": true,
          "route": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table.private[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-private",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-private",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "propagating_vgws": true,
          "route": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table.public[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-public",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-public",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "propagating_vgws": true,
          "route": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table_association.database[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "database",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table_association.database[1]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "database",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table_association.private[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table_association.private[1]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table_association.public[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_route_table_association.public[1]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_subnet.database[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "database",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-west-3a",
          "cidr_block": "10.0.151.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-db-eu-west-3a",
            "Type": "database-subnets",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-db-eu-west-3a",
            "Type": "database-subnets",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_subnet.database[1]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "database",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-west-3b",
          "cidr_block": "10.0.152.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-db-eu-west-3b",
            "Type": "database-subnets",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-db-eu-west-3b",
            "Type": "database-subnets",
            "environment": "dev",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_subnet.private[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-west-3a",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-private-eu-west-3a",
            "Type": "private-subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/internal-elb": "1",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-private-eu-west-3a",
            "Type": "private-subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/internal-elb": "1",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_subnet.private[1]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-west-3b",
          "cidr_block": "10.0.2.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-private-eu-west-3b",
            "Type": "private-subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/internal-elb": "1",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-private-eu-west-3b",
            "Type": "private-subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/internal-elb": "1",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_subnet.public[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-west-3a",
          "cidr_block": "10.0.101.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": true,
          "outpost_arn": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-public-eu-west-3a",
            "Type": "Public Subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/elb": "1",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-public-eu-west-3a",
            "Type": "Public Subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/elb": "1",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_subnet.public[1]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "eu-west-3b",
          "cidr_block": "10.0.102.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_lni_at_device_index": null,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": true,
          "outpost_arn": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop-public-eu-west-3b",
            "Type": "Public Subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/elb": "1",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop-public-eu-west-3b",
            "Type": "Public Subnets",
            "environment": "dev",
            "kubernetes.io/cluster/sockshop-dev-eks-sockshop": "shared",
            "kubernetes.io/role/elb": "1",
            "owners": "sockshop"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": {},
          "tags_all": {},
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.module.vpc.aws_vpc.this[0]",
      "module_address": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_generated_ipv6_cidr_block": null,
          "cidr_block": "10.0.0.0/16",
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_ipam_pool_id": null,
          "ipv6_netmask_length": null,
          "tags": {
            "Name": "sockshop-dev-eks-sockshop",
            "environment": "dev",
            "owners": "sockshop"
          },
          "tags_all": {
            "Name": "sockshop-dev-eks-sockshop",
            "environment": "dev",
            "owners": "sockshop"
          }
        },
        "after_unknown": {
          "arn": true,
          "default_network_acl_id": true,
          "default_route_table_id": true,
          "default_security_group_id": true,
          "dhcp_options_id": true,
          "enable_network_address_usage_metrics": true,
          "id": true,
          "ipv6_association_id": true,
          "ipv6_cidr_block": true,
          "ipv6_cidr_block_network_border_group": true,
          "main_route_table_id": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    }
  ],
  "output_changes": {
    "aws_iam_openid_connect_provider_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "aws_iam_openid_connect_provider_extract_from_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_certificate_authority_data": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_endpoint": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_iam_role_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_iam_role_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "sockshop-dev-eks-master-role",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "sockshop-dev-eks",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_oidc_issuer_url": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_primary_security_group_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_version": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        null,
        null
      ],
      "after_unknown": [
        true,
        true
      ],
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        null,
        null
      ],
      "after_unknown": [
        true,
        true
      ],
      "before_sensitive": false,
      "after_sensitive": false
    },
    "region": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "eu-west-3",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.8.4",
    "values": {
      "outputs": {
        "cluster_iam_role_name": {
          "sensitive": false,
          "value": "sockshop-dev-eks-master-role",
          "type": "string"
        },
        "cluster_name": {
          "sensitive": false,
          "value": "sockshop-dev-eks",
          "type": "string"
        },
        "region": {
          "sensitive": false,
          "value": "eu-west-3",
          "type": "string"
        }
      },
      "root_module": {
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.vpc.data.aws_availability_zones.available",
                "mode": "data",
                "type": "aws_availability_zones",
                "name": "available",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "all_availability_zones": null,
                  "exclude_names": null,
                  "exclude_zone_ids": null,
                  "filter": null,
                  "group_names": [
                    "eu-west-3"
                  ],
                  "id": "eu-west-3",
                  "names": [
                    "eu-west-3a",
                    "eu-west-3b",
                    "eu-west-3c"
                  ],
                  "state": null,
                  "timeouts": null,
                  "zone_ids": [
                    "euw3-az1",
                    "euw3-az2",
                    "euw3-az3"
                  ]
                },
                "sensitive_values": {
                  "group_names": [
                    false
                  ],
                  "names": [
                    false,
                    false,
                    false
                  ],
                  "zone_ids": [
                    false,
                    false,
                    false
                  ]
                }
              }
            ],
            "address": "module.vpc"
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "version_constraint": ">= 5.31.0",
        "expressions": {
          "region": {
            "references": [
              "var.aws_region"
            ]
          }
        }
      },
      "kubernetes": {
        "name": "kubernetes",
        "full_name": "registry.terraform.io/hashicorp/kubernetes",
        "expressions": {
          "cluster_ca_certificate": {
            "references": [
              "module.eks.cluster_certificate_authority_data",
              "module.eks"
            ]
          },
          "host": {
            "references": [
              "module.eks.cluster_endpoint",
              "module.eks"
            ]
          },
          "token": {
            "references": [
              "data.aws_eks_cluster_auth.cluster.token",
              "data.aws_eks_cluster_auth.cluster"
            ]
          }
        }
      }
    },
    "root_module": {
      "outputs": {
        "aws_iam_openid_connect_provider_arn": {
          "expression": {
            "references": [
              "module.oidc.aws_iam_openid_connect_provider_arn",
              "module.oidc"
            ]
          },
          "description": "AWS IAM Open ID Connect Provider ARN"
        },
        "aws_iam_openid_connect_provider_extract_from_arn": {
          "expression": {
            "references": [
              "module.oidc.aws_iam_openid_connect_provider_extract_from_arn",
              "module.oidc"
            ]
          },
          "description": "AWS IAM Open ID Connect Provider extract from ARN"
        },
        "cluster_arn": {
          "expression": {
            "references": [
              "module.eks.cluster_arn",
              "module.eks"
            ]
          },
          "description": "The Amazon Resource Name (ARN) of the cluster."
        },
        "cluster_certificate_authority_data": {
          "expression": {
            "references": [
              "module.eks.cluster_certificate_authority_data",
              "module.eks"
            ]
          },
          "description": "Nested attribute containing certificate-authority-data for your cluster. This is the base64 encoded certificate data required to communicate with your cluster."
        },
        "cluster_endpoint": {
          "expression": {
            "references": [
              "module.eks.cluster_endpoint",
              "module.eks"
            ]
          },
          "description": "The endpoint for your EKS Kubernetes API."
        },
        "cluster_iam_role_arn": {
          "expression": {
            "references": [
              "module.eks.cluster_iam_role_arn",
              "module.eks"
            ]
          },
          "description": "IAM role ARN of the EKS cluster."
        },
        "cluster_iam_role_name": {
          "expression": {
            "references": [
              "module.eks.cluster_iam_role_name",
              "module.eks"
            ]
          },
          "description": "IAM role name of the EKS cluster."
        },
        "cluster_id": {
          "expression": {
            "references": [
              "module.eks.cluster_id",
              "module.eks"
            ]
          },
          "description": "The name/id of the EKS cluster."
        },
        "cluster_name": {
          "expression": {
            "references": [
              "module.eks.cluster_name",
              "module.eks"
            ]
          },
          "description": "The name/id of the EKS cluster."
        },
        "cluster_oidc_issuer_url": {
          "expression": {
            "references": [
              "module.eks.cluster_oidc_issuer_url",
              "module.eks"
            ]
          },
          "description": "The URL on the EKS cluster OIDC Issuer"
        },
        "cluster_primary_security_group_id": {
          "expression": {
            "references": [
              "module.eks.cluster_primary_security_group_id",
              "module.eks"
            ]
          },
          "description": "The cluster primary security group ID created by the EKS cluster on 1.14 or later. Referred to as 'Cluster security group' in the EKS console."
        },
        "cluster_version": {
          "expression": {
            "references": [
              "module.eks.cluster_version",
              "module.eks"
            ]
          },
          "description": "The Kubernetes server version for the EKS cluster."
        },
        "private_subnets": {
          "expression": {
            "references": [
              "module.vpc.private_subnets",
              "module.vpc"
            ]
          },
          "description": "List of IDs of private subnets"
        },
        "public_subnets": {
          "expression": {
            "references": [
              "module.vpc.public_subnets",
              "module.vpc"
            ]
          },
          "description": "List of IDs of public subnets"
        },
        "region": {
          "expression": {
            "references": [
              "var.aws_region"
            ]
          },
          "description": "AWS Region"
        },
        "vpc_id": {
          "expression": {
            "references": [
              "module.vpc.vpc_id",
              "module.vpc"
            ]
          },
          "description": "The ID of the VPC"
        }
      },
      "resources": [
        {
          "address": "data.aws_eks_cluster_auth.cluster",
          "mode": "data",
          "type": "aws_eks_cluster_auth",
          "name": "cluster",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "module.eks.cluster_id",
                "module.eks"
              ]
            }
          },
          "schema_version": 0
        }
      ],
      "module_calls": {
        "eks": {
          "source": "./modules/eks",
          "expressions": {
            "name": {
              "references": [
                "local.name"
              ]
            },
            "private_subnets": {
              "references": [
                "module.vpc.private_subnets",
                "module.vpc"
              ]
            },
            "public_subnets": {
              "references": [
                "module.vpc.public_subnets",
                "module.vpc"
              ]
            }
          },
          "module": {
            "outputs": {
              "account_id": {
                "expression": {
                  "references": [
                    "data.aws_caller_identity.current.account_id",
                    "data.aws_caller_identity.current"
                  ]
                }
              },
              "cluster_arn": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.arn",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "The Amazon Resource Name (ARN) of the cluster."
              },
              "cluster_certificate_authority_data": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.certificate_authority[0].data",
                    "aws_eks_cluster.eks_cluster.certificate_authority[0]",
                    "aws_eks_cluster.eks_cluster.certificate_authority",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "Nested attribute containing certificate-authority-data for your cluster. This is the base64 encoded certificate data required to communicate with your cluster."
              },
              "cluster_endpoint": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.endpoint",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "The endpoint for your EKS Kubernetes API."
              },
              "cluster_iam_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.eks_master_role.arn",
                    "aws_iam_role.eks_master_role"
                  ]
                },
                "description": "IAM role ARN of the EKS cluster."
              },
              "cluster_iam_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.eks_master_role.name",
                    "aws_iam_role.eks_master_role"
                  ]
                },
                "description": "IAM role name of the EKS cluster."
              },
              "cluster_id": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.id",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "The name/id of the EKS cluster."
              },
              "cluster_name": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.name",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "The name/id of the EKS cluster."
              },
              "cluster_oidc_issuer_url": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.identity[0].oidc[0].issuer",
                    "aws_eks_cluster.eks_cluster.identity[0].oidc[0]",
                    "aws_eks_cluster.eks_cluster.identity[0].oidc",
                    "aws_eks_cluster.eks_cluster.identity[0]",
                    "aws_eks_cluster.eks_cluster.identity",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "The URL on the EKS cluster OIDC Issuer"
              },
              "cluster_primary_security_group_id": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.vpc_config[0].cluster_security_group_id",
                    "aws_eks_cluster.eks_cluster.vpc_config[0]",
                    "aws_eks_cluster.eks_cluster.vpc_config",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "The cluster primary security group ID created by the EKS cluster on 1.14 or later. Referred to as 'Cluster security group' in the EKS console."
              },
              "cluster_version": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.eks_cluster.version",
                    "aws_eks_cluster.eks_cluster"
                  ]
                },
                "description": "The Kubernetes server version for the EKS cluster."
              },
              "node_group_private_arn": {
                "expression": {
                  "references": [
                    "aws_eks_node_group.eks_ng_private.arn",
                    "aws_eks_node_group.eks_ng_private"
                  ]
                },
                "description": "Private Node Group ARN"
              },
              "node_group_private_id": {
                "expression": {
                  "references": [
                    "aws_eks_node_group.eks_ng_private.id",
                    "aws_eks_node_group.eks_ng_private"
                  ]
                },
                "description": "Node Group 1 ID"
              },
              "node_group_private_status": {
                "expression": {
                  "references": [
                    "aws_eks_node_group.eks_ng_private.status",
                    "aws_eks_node_group.eks_ng_private"
                  ]
                },
                "description": "Private Node Group status"
              },
              "node_group_private_version": {
                "expression": {
                  "references": [
                    "aws_eks_node_group.eks_ng_private.version",
                    "aws_eks_node_group.eks_ng_private"
                  ]
                },
                "description": "Private Node Group Kubernetes Version"
              }
            },
            "resources": [
              {
                "address": "aws_eks_cluster.eks_cluster",
                "mode": "managed",
                "type": "aws_eks_cluster",
                "name": "eks_cluster",
                "provider_config_key": "aws",
                "expressions": {
                  "enabled_cluster_log_types": {
                    "constant_value": [
                      "api",
                      "audit",
                      "authenticator",
                      "controllerManager",
                      "scheduler"
                    ]
                  },
                  "kubernetes_network_config": [
                    {
                      "service_ipv4_cidr": {
                        "references": [
                          "var.cluster_service_ipv4_cidr"
                        ]
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "var.name",
                      "var.cluster_name"
                    ]
                  },
                  "role_arn": {
                    "references": [
                      "aws_iam_role.eks_master_role.arn",
                      "aws_iam_role.eks_master_role"
                    ]
                  },
                  "version": {
                    "references": [
                      "var.cluster_version"
                    ]
                  },
                  "vpc_config": [
                    {
                      "endpoint_private_access": {
                        "references": [
                          "var.cluster_endpoint_private_access"
                        ]
                      },
                      "endpoint_public_access": {
                        "references": [
                          "var.cluster_endpoint_public_access"
                        ]
                      },
                      "public_access_cidrs": {
                        "references": [
                          "var.cluster_endpoint_public_access_cidrs"
                        ]
                      },
                      "subnet_ids": {
                        "references": [
                          "var.public_subnets"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "depends_on": [
                  "aws_iam_role_policy_attachment.eks-AmazonEKSClusterPolicy",
                  "aws_iam_role_policy_attachment.eks-AmazonEKSVPCResourceController"
                ]
              },
              {
                "address": "aws_eks_node_group.eks_ng_private",
                "mode": "managed",
                "type": "aws_eks_node_group",
                "name": "eks_ng_private",
                "provider_config_key": "aws",
                "expressions": {
                  "ami_type": {
                    "constant_value": "AL2_x86_64"
                  },
                  "capacity_type": {
                    "constant_value": "ON_DEMAND"
                  },
                  "cluster_name": {
                    "references": [
                      "aws_eks_cluster.eks_cluster.name",
                      "aws_eks_cluster.eks_cluster"
                    ]
                  },
                  "disk_size": {
                    "constant_value": 20
                  },
                  "instance_types": {
                    "constant_value": [
                      "t3.medium"
                    ]
                  },
                  "node_group_name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "node_role_arn": {
                    "references": [
                      "aws_iam_role.eks_nodegroup_role.arn",
                      "aws_iam_role.eks_nodegroup_role"
                    ]
                  },
                  "remote_access": [
                    {
                      "ec2_ssh_key": {
                        "constant_value": "eks-terraform-key"
                      }
                    }
                  ],
                  "scaling_config": [
                    {
                      "desired_size": {
                        "constant_value": 1
                      },
                      "max_size": {
                        "constant_value": 2
                      },
                      "min_size": {
                        "constant_value": 1
                      }
                    }
                  ],
                  "subnet_ids": {
                    "references": [
                      "var.private_subnets"
                    ]
                  },
                  "tags": {
                    "constant_value": {
                      "Name": "Private-Node-Group"
                    }
                  },
                  "update_config": [
                    {
                      "max_unavailable": {
                        "constant_value": 1
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "depends_on": [
                  "aws_iam_role_policy_attachment.eks-AmazonEKSWorkerNodePolicy",
                  "aws_iam_role_policy_attachment.eks-AmazonEKS_CNI_Policy",
                  "aws_iam_role_policy_attachment.eks-AmazonEC2ContainerRegistryReadOnly",
                  "kubernetes_config_map_v1.aws_auth"
                ]
              },
              {
                "address": "aws_iam_group.eksadmins_iam_group",
                "mode": "managed",
                "type": "aws_iam_group",
                "name": "eksadmins_iam_group",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_group_membership.eksadmins",
                "mode": "managed",
                "type": "aws_iam_group_membership",
                "name": "eksadmins",
                "provider_config_key": "aws",
                "expressions": {
                  "group": {
                    "references": [
                      "aws_iam_group.eksadmins_iam_group.name",
                      "aws_iam_group.eksadmins_iam_group"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "users": {
                    "references": [
                      "aws_iam_user.eksadmin_user.name",
                      "aws_iam_user.eksadmin_user"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_group_policy.eksadmins_iam_group_assumerole_policy",
                "mode": "managed",
                "type": "aws_iam_group_policy",
                "name": "eksadmins_iam_group_assumerole_policy",
                "provider_config_key": "aws",
                "expressions": {
                  "group": {
                    "references": [
                      "aws_iam_group.eksadmins_iam_group.name",
                      "aws_iam_group.eksadmins_iam_group"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "aws_iam_role.eks_admin_role.arn",
                      "aws_iam_role.eks_admin_role"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role.eks_admin_role",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "eks_admin_role",
                "provider_config_key": "aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_caller_identity.current.account_id",
                      "data.aws_caller_identity.current"
                    ]
                  },
                  "inline_policy": [
                    {
                      "name": {
                        "constant_value": "eks-full-access-policy"
                      },
                      "policy": {}
                    }
                  ],
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.name"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role.eks_master_role",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "eks_master_role",
                "provider_config_key": "aws",
                "expressions": {
                  "assume_role_policy": {
                    "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role.eks_nodegroup_role",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "eks_nodegroup_role",
                "provider_config_key": "aws",
                "expressions": {
                  "assume_role_policy": {},
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.eks-AmazonEC2ContainerRegistryReadOnly",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "eks-AmazonEC2ContainerRegistryReadOnly",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "constant_value": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.eks_nodegroup_role.name",
                      "aws_iam_role.eks_nodegroup_role"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.eks-AmazonEKSClusterPolicy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "eks-AmazonEKSClusterPolicy",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "constant_value": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.eks_master_role.name",
                      "aws_iam_role.eks_master_role"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.eks-AmazonEKSVPCResourceController",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "eks-AmazonEKSVPCResourceController",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "constant_value": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.eks_master_role.name",
                      "aws_iam_role.eks_master_role"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.eks-AmazonEKSWorkerNodePolicy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "eks-AmazonEKSWorkerNodePolicy",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "constant_value": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.eks_nodegroup_role.name",
                      "aws_iam_role.eks_nodegroup_role"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_role_policy_attachment.eks-AmazonEKS_CNI_Policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "eks-AmazonEKS_CNI_Policy",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "constant_value": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.eks_nodegroup_role.name",
                      "aws_iam_role.eks_nodegroup_role"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_user.admin_user",
                "mode": "managed",
                "type": "aws_iam_user",
                "name": "admin_user",
                "provider_config_key": "aws",
                "expressions": {
                  "force_destroy": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "tags": {
                    "references": [
                      "local.common_tags"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_user.basic_user",
                "mode": "managed",
                "type": "aws_iam_user",
                "name": "basic_user",
                "provider_config_key": "aws",
                "expressions": {
                  "force_destroy": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "tags": {
                    "references": [
                      "local.common_tags"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_user.eksadmin_user",
                "mode": "managed",
                "type": "aws_iam_user",
                "name": "eksadmin_user",
                "provider_config_key": "aws",
                "expressions": {
                  "force_destroy": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "path": {
                    "constant_value": "/"
                  },
                  "tags": {
                    "references": [
                      "local.common_tags"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_user_policy.basic_user_eks_policy",
                "mode": "managed",
                "type": "aws_iam_user_policy",
                "name": "basic_user_eks_policy",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.name"
                    ]
                  },
                  "policy": {},
                  "user": {
                    "references": [
                      "aws_iam_user.basic_user.name",
                      "aws_iam_user.basic_user"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "aws_iam_user_policy_attachment.admin_user",
                "mode": "managed",
                "type": "aws_iam_user_policy_attachment",
                "name": "admin_user",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "constant_value": "arn:aws:iam::aws:policy/AdministratorAccess"
                  },
                  "user": {
                    "references": [
                      "aws_iam_user.admin_user.name",
                      "aws_iam_user.admin_user"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "kubernetes_config_map_v1.aws_auth",
                "mode": "managed",
                "type": "kubernetes_config_map_v1",
                "name": "aws_auth",
                "provider_config_key": "kubernetes",
                "expressions": {
                  "data": {
                    "references": [
                      "local.configmap_roles",
                      "local.configmap_users"
                    ]
                  },
                  "metadata": [
                    {
                      "name": {
                        "constant_value": "aws-auth"
                      },
                      "namespace": {
                        "constant_value": "kube-system"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "depends_on": [
                  "aws_eks_cluster.eks_cluster"
                ]
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              }
            ],
            "variables": {
              "aws_region": {
                "default": "eu-west-3",
                "description": "Region"
              },
              "cluster_endpoint_private_access": {
                "default": false,
                "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled."
              },
              "cluster_endpoint_public_access": {
                "default": true,
                "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled. When it's set to `false` ensure to have a proper private access with `cluster_endpoint_private_access = true`."
              },
              "cluster_endpoint_public_access_cidrs": {
                "default": [
                  "0.0.0.0/0"
                ],
                "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint."
              },
              "cluster_name": {
                "default": "eks",
                "description": "Name of the EKS cluster. Also used as a prefix in names of related resources."
              },
              "cluster_service_ipv4_cidr": {
                "default": null,
                "description": "service ipv4 cidr for the kubernetes cluster"
              },
              "cluster_version": {
                "default": null,
                "description": "Kubernetes minor version to use for the EKS cluster (for example 1.21)"
              },
              "common_tags": {
                "default": {
                  "environment": "dev",
                  "owners": "architect"
                }
              },
              "environment": {
                "default": "dev",
                "description": "Environment use as a prefix"
              },
              "name": {},
              "office": {
                "default": "sockshop",
                "description": "Office"
              },
              "private_subnets": {},
              "public_subnets": {}
            }
          },
          "depends_on": [
            "module.vpc"
          ]
        },
        "oidc": {
          "source": "./modules/oidc",
          "expressions": {
            "cluster_name": {
              "references": [
                "var.cluster_name"
              ]
            },
            "issuer": {
              "references": [
                "module.eks.cluster_oidc_issuer_url",
                "module.eks"
              ]
            }
          },
          "module": {
            "outputs": {
              "aws_iam_openid_connect_provider_arn": {
                "expression": {
                  "references": [
                    "aws_iam_openid_connect_provider.oidc_provider.arn",
                    "aws_iam_openid_connect_provider.oidc_provider"
                  ]
                },
                "description": "AWS IAM Open ID Connect Provider ARN"
              },
              "aws_iam_openid_connect_provider_extract_from_arn": {
                "expression": {
                  "references": [
                    "local.aws_iam_oidc_connect_provider_extract_from_arn"
                  ]
                },
                "description": "AWS IAM Open ID Connect Provider extract from ARN"
              }
            },
            "resources": [
              {
                "address": "aws_iam_openid_connect_provider.oidc_provider",
                "mode": "managed",
                "type": "aws_iam_openid_connect_provider",
                "name": "oidc_provider",
                "provider_config_key": "aws",
                "expressions": {
                  "client_id_list": {
                    "references": [
                      "data.aws_partition.current.dns_suffix",
                      "data.aws_partition.current"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.cluster_name",
                      "var.common_tags"
                    ]
                  },
                  "thumbprint_list": {
                    "references": [
                      "var.eks_oidc_root_ca_thumbprint"
                    ]
                  },
                  "url": {
                    "references": [
                      "var.issuer"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              }
            ],
            "variables": {
              "cluster_name": {},
              "common_tags": {
                "default": {
                  "environment": "dev",
                  "owners": "architect"
                }
              },
              "eks_oidc_root_ca_thumbprint": {
                "default": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "description": "Thumbprint of Root CA for EKS OIDC, Valid until 2037"
              },
              "issuer": {}
            }
          },
          "depends_on": [
            "module.eks"
          ]
        },
        "vpc": {
          "source": "./modules/vpc",
          "expressions": {
            "common_tags": {
              "references": [
                "local.common_tags"
              ]
            },
            "eks_cluster_name": {
              "references": [
                "local.eks_cluster_name"
              ]
            },
            "vpc_cidr_block": {
              "references": [
                "var.vpc_cidr_block"
              ]
            },
            "vpc_create_database_subnet_group": {
              "references": [
                "var.vpc_create_database_subnet_group"
              ]
            },
            "vpc_create_database_subnet_route_table": {
              "references": [
                "var.vpc_create_database_subnet_route_table"
              ]
            },
            "vpc_database_subnets": {
              "references": [
                "var.vpc_database_subnets"
              ]
            },
            "vpc_enable_nat_gateway": {
              "references": [
                "var.vpc_enable_nat_gateway"
              ]
            },
            "vpc_name": {
              "references": [
                "var.vpc_name"
              ]
            },
            "vpc_private_subnets": {
              "references": [
                "var.vpc_private_subnets"
              ]
            },
            "vpc_public_subnets": {
              "references": [
                "var.vpc_public_subnets"
              ]
            },
            "vpc_single_nat_gateway": {
              "references": [
                "var.vpc_single_nat_gateway"
              ]
            }
          },
          "module": {
            "outputs": {
              "azs": {
                "expression": {
                  "references": [
                    "module.vpc.azs",
                    "module.vpc"
                  ]
                },
                "description": "A list of availability zones spefified as argument to this module"
              },
              "module_vpc": {
                "expression": {
                  "references": [
                    "module.vpc"
                  ]
                },
                "description": "A list of availability zones spefified as argument to this module"
              },
              "nat_public_ips": {
                "expression": {
                  "references": [
                    "module.vpc.nat_public_ips",
                    "module.vpc"
                  ]
                },
                "description": "List of public Elastic IPs created for AWS NAT Gateway"
              },
              "private_subnets": {
                "expression": {
                  "references": [
                    "module.vpc.private_subnets",
                    "module.vpc"
                  ]
                },
                "description": "List of IDs of private subnets"
              },
              "public_subnets": {
                "expression": {
                  "references": [
                    "module.vpc.public_subnets",
                    "module.vpc"
                  ]
                },
                "description": "List of IDs of public subnets"
              },
              "vpc_cidr_block": {
                "expression": {
                  "references": [
                    "module.vpc.vpc_cidr_block",
                    "module.vpc"
                  ]
                },
                "description": "The CIDR block of the VPC"
              },
              "vpc_id": {
                "expression": {
                  "references": [
                    "module.vpc.vpc_id",
                    "module.vpc"
                  ]
                },
                "description": "The ID of the VPC"
              }
            },
            "resources": [
              {
                "address": "data.aws_availability_zones.available",
                "mode": "data",
                "type": "aws_availability_zones",
                "name": "available",
                "provider_config_key": "aws",
                "schema_version": 0
              }
            ],
            "module_calls": {
              "vpc": {
                "source": "terraform-aws-modules/vpc/aws",
                "expressions": {
                  "azs": {
                    "references": [
                      "data.aws_availability_zones.available.names",
                      "data.aws_availability_zones.available"
                    ]
                  },
                  "cidr": {
                    "references": [
                      "var.vpc_cidr_block"
                    ]
                  },
                  "create_database_subnet_group": {
                    "references": [
                      "var.vpc_create_database_subnet_group"
                    ]
                  },
                  "create_database_subnet_route_table": {
                    "references": [
                      "var.vpc_create_database_subnet_route_table"
                    ]
                  },
                  "database_subnet_tags": {
                    "constant_value": {
                      "Type": "database-subnets"
                    }
                  },
                  "database_subnets": {
                    "references": [
                      "var.vpc_database_subnets"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "constant_value": true
                  },
                  "enable_dns_support": {
                    "constant_value": true
                  },
                  "enable_nat_gateway": {
                    "references": [
                      "var.vpc_enable_nat_gateway"
                    ]
                  },
                  "map_public_ip_on_launch": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.eks_cluster_name"
                    ]
                  },
                  "private_subnet_tags": {
                    "references": [
                      "var.eks_cluster_name"
                    ]
                  },
                  "private_subnets": {
                    "references": [
                      "var.vpc_private_subnets"
                    ]
                  },
                  "public_subnet_tags": {
                    "references": [
                      "var.eks_cluster_name"
                    ]
                  },
                  "public_subnets": {
                    "references": [
                      "var.vpc_public_subnets"
                    ]
                  },
                  "single_nat_gateway": {
                    "references": [
                      "var.vpc_single_nat_gateway"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.common_tags"
                    ]
                  },
                  "vpc_tags": {
                    "references": [
                      "var.common_tags"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "azs": {
                      "expression": {
                        "references": [
                          "var.azs"
                        ]
                      },
                      "description": "A list of availability zones specified as argument to this module"
                    },
                    "cgw_arns": {
                      "expression": {
                        "references": [
                          "aws_customer_gateway.this"
                        ]
                      },
                      "description": "List of ARNs of Customer Gateway"
                    },
                    "cgw_ids": {
                      "expression": {
                        "references": [
                          "aws_customer_gateway.this"
                        ]
                      },
                      "description": "List of IDs of Customer Gateway"
                    },
                    "database_internet_gateway_route_id": {
                      "expression": {
                        "references": [
                          "aws_route.database_internet_gateway[0].id",
                          "aws_route.database_internet_gateway[0]",
                          "aws_route.database_internet_gateway"
                        ]
                      },
                      "description": "ID of the database internet gateway route"
                    },
                    "database_ipv6_egress_route_id": {
                      "expression": {
                        "references": [
                          "aws_route.database_ipv6_egress[0].id",
                          "aws_route.database_ipv6_egress[0]",
                          "aws_route.database_ipv6_egress"
                        ]
                      },
                      "description": "ID of the database IPv6 egress route"
                    },
                    "database_nat_gateway_route_ids": {
                      "expression": {
                        "references": [
                          "aws_route.database_nat_gateway"
                        ]
                      },
                      "description": "List of IDs of the database nat gateway route"
                    },
                    "database_network_acl_arn": {
                      "expression": {
                        "references": [
                          "aws_network_acl.database[0].arn",
                          "aws_network_acl.database[0]",
                          "aws_network_acl.database"
                        ]
                      },
                      "description": "ARN of the database network ACL"
                    },
                    "database_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_network_acl.database[0].id",
                          "aws_network_acl.database[0]",
                          "aws_network_acl.database"
                        ]
                      },
                      "description": "ID of the database network ACL"
                    },
                    "database_route_table_association_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table_association.database"
                        ]
                      },
                      "description": "List of IDs of the database route table association"
                    },
                    "database_route_table_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table.database",
                          "aws_route_table.database",
                          "aws_route_table.private"
                        ]
                      },
                      "description": "List of IDs of database route tables"
                    },
                    "database_subnet_arns": {
                      "expression": {
                        "references": [
                          "aws_subnet.database"
                        ]
                      },
                      "description": "List of ARNs of database subnets"
                    },
                    "database_subnet_group": {
                      "expression": {
                        "references": [
                          "aws_db_subnet_group.database[0].id",
                          "aws_db_subnet_group.database[0]",
                          "aws_db_subnet_group.database"
                        ]
                      },
                      "description": "ID of database subnet group"
                    },
                    "database_subnet_group_name": {
                      "expression": {
                        "references": [
                          "aws_db_subnet_group.database[0].name",
                          "aws_db_subnet_group.database[0]",
                          "aws_db_subnet_group.database"
                        ]
                      },
                      "description": "Name of database subnet group"
                    },
                    "database_subnets": {
                      "expression": {
                        "references": [
                          "aws_subnet.database"
                        ]
                      },
                      "description": "List of IDs of database subnets"
                    },
                    "database_subnets_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.database"
                        ]
                      },
                      "description": "List of cidr_blocks of database subnets"
                    },
                    "database_subnets_ipv6_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.database"
                        ]
                      },
                      "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
                    },
                    "default_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].default_network_acl_id",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The ID of the default network ACL"
                    },
                    "default_route_table_id": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].default_route_table_id",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The ID of the default route table"
                    },
                    "default_security_group_id": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].default_security_group_id",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The ID of the security group created by default on VPC creation"
                    },
                    "default_vpc_arn": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].arn",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "The ARN of the Default VPC"
                    },
                    "default_vpc_cidr_block": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].cidr_block",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "The CIDR block of the Default VPC"
                    },
                    "default_vpc_default_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].default_network_acl_id",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "The ID of the default network ACL of the Default VPC"
                    },
                    "default_vpc_default_route_table_id": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].default_route_table_id",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "The ID of the default route table of the Default VPC"
                    },
                    "default_vpc_default_security_group_id": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].default_security_group_id",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "The ID of the security group created by default on Default VPC creation"
                    },
                    "default_vpc_enable_dns_hostnames": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].enable_dns_hostnames",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "Whether or not the Default VPC has DNS hostname support"
                    },
                    "default_vpc_enable_dns_support": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].enable_dns_support",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "Whether or not the Default VPC has DNS support"
                    },
                    "default_vpc_id": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].id",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "The ID of the Default VPC"
                    },
                    "default_vpc_instance_tenancy": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].instance_tenancy",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "Tenancy of instances spin up within Default VPC"
                    },
                    "default_vpc_main_route_table_id": {
                      "expression": {
                        "references": [
                          "aws_default_vpc.this[0].main_route_table_id",
                          "aws_default_vpc.this[0]",
                          "aws_default_vpc.this"
                        ]
                      },
                      "description": "The ID of the main route table associated with the Default VPC"
                    },
                    "dhcp_options_id": {
                      "expression": {
                        "references": [
                          "aws_vpc_dhcp_options.this[0].id",
                          "aws_vpc_dhcp_options.this[0]",
                          "aws_vpc_dhcp_options.this"
                        ]
                      },
                      "description": "The ID of the DHCP options"
                    },
                    "egress_only_internet_gateway_id": {
                      "expression": {
                        "references": [
                          "aws_egress_only_internet_gateway.this[0].id",
                          "aws_egress_only_internet_gateway.this[0]",
                          "aws_egress_only_internet_gateway.this"
                        ]
                      },
                      "description": "The ID of the egress only Internet Gateway"
                    },
                    "elasticache_network_acl_arn": {
                      "expression": {
                        "references": [
                          "aws_network_acl.elasticache[0].arn",
                          "aws_network_acl.elasticache[0]",
                          "aws_network_acl.elasticache"
                        ]
                      },
                      "description": "ARN of the elasticache network ACL"
                    },
                    "elasticache_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_network_acl.elasticache[0].id",
                          "aws_network_acl.elasticache[0]",
                          "aws_network_acl.elasticache"
                        ]
                      },
                      "description": "ID of the elasticache network ACL"
                    },
                    "elasticache_route_table_association_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table_association.elasticache"
                        ]
                      },
                      "description": "List of IDs of the elasticache route table association"
                    },
                    "elasticache_route_table_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table.elasticache",
                          "local.private_route_table_ids"
                        ]
                      },
                      "description": "List of IDs of elasticache route tables"
                    },
                    "elasticache_subnet_arns": {
                      "expression": {
                        "references": [
                          "aws_subnet.elasticache"
                        ]
                      },
                      "description": "List of ARNs of elasticache subnets"
                    },
                    "elasticache_subnet_group": {
                      "expression": {
                        "references": [
                          "aws_elasticache_subnet_group.elasticache[0].id",
                          "aws_elasticache_subnet_group.elasticache[0]",
                          "aws_elasticache_subnet_group.elasticache"
                        ]
                      },
                      "description": "ID of elasticache subnet group"
                    },
                    "elasticache_subnet_group_name": {
                      "expression": {
                        "references": [
                          "aws_elasticache_subnet_group.elasticache[0].name",
                          "aws_elasticache_subnet_group.elasticache[0]",
                          "aws_elasticache_subnet_group.elasticache"
                        ]
                      },
                      "description": "Name of elasticache subnet group"
                    },
                    "elasticache_subnets": {
                      "expression": {
                        "references": [
                          "aws_subnet.elasticache"
                        ]
                      },
                      "description": "List of IDs of elasticache subnets"
                    },
                    "elasticache_subnets_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.elasticache"
                        ]
                      },
                      "description": "List of cidr_blocks of elasticache subnets"
                    },
                    "elasticache_subnets_ipv6_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.elasticache"
                        ]
                      },
                      "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
                    },
                    "igw_arn": {
                      "expression": {
                        "references": [
                          "aws_internet_gateway.this[0].arn",
                          "aws_internet_gateway.this[0]",
                          "aws_internet_gateway.this"
                        ]
                      },
                      "description": "The ARN of the Internet Gateway"
                    },
                    "igw_id": {
                      "expression": {
                        "references": [
                          "aws_internet_gateway.this[0].id",
                          "aws_internet_gateway.this[0]",
                          "aws_internet_gateway.this"
                        ]
                      },
                      "description": "The ID of the Internet Gateway"
                    },
                    "intra_network_acl_arn": {
                      "expression": {
                        "references": [
                          "aws_network_acl.intra[0].arn",
                          "aws_network_acl.intra[0]",
                          "aws_network_acl.intra"
                        ]
                      },
                      "description": "ARN of the intra network ACL"
                    },
                    "intra_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_network_acl.intra[0].id",
                          "aws_network_acl.intra[0]",
                          "aws_network_acl.intra"
                        ]
                      },
                      "description": "ID of the intra network ACL"
                    },
                    "intra_route_table_association_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table_association.intra"
                        ]
                      },
                      "description": "List of IDs of the intra route table association"
                    },
                    "intra_route_table_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table.intra"
                        ]
                      },
                      "description": "List of IDs of intra route tables"
                    },
                    "intra_subnet_arns": {
                      "expression": {
                        "references": [
                          "aws_subnet.intra"
                        ]
                      },
                      "description": "List of ARNs of intra subnets"
                    },
                    "intra_subnets": {
                      "expression": {
                        "references": [
                          "aws_subnet.intra"
                        ]
                      },
                      "description": "List of IDs of intra subnets"
                    },
                    "intra_subnets_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.intra"
                        ]
                      },
                      "description": "List of cidr_blocks of intra subnets"
                    },
                    "intra_subnets_ipv6_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.intra"
                        ]
                      },
                      "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
                    },
                    "name": {
                      "expression": {
                        "references": [
                          "var.name"
                        ]
                      },
                      "description": "The name of the VPC specified as argument to this module"
                    },
                    "nat_ids": {
                      "expression": {
                        "references": [
                          "aws_eip.nat"
                        ]
                      },
                      "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
                    },
                    "nat_public_ips": {
                      "expression": {
                        "references": [
                          "var.reuse_nat_ips",
                          "var.external_nat_ips",
                          "aws_eip.nat"
                        ]
                      },
                      "description": "List of public Elastic IPs created for AWS NAT Gateway"
                    },
                    "natgw_ids": {
                      "expression": {
                        "references": [
                          "aws_nat_gateway.this"
                        ]
                      },
                      "description": "List of NAT Gateway IDs"
                    },
                    "natgw_interface_ids": {
                      "expression": {
                        "references": [
                          "aws_nat_gateway.this"
                        ]
                      },
                      "description": "List of Network Interface IDs assigned to NAT Gateways"
                    },
                    "outpost_network_acl_arn": {
                      "expression": {
                        "references": [
                          "aws_network_acl.outpost[0].arn",
                          "aws_network_acl.outpost[0]",
                          "aws_network_acl.outpost"
                        ]
                      },
                      "description": "ARN of the outpost network ACL"
                    },
                    "outpost_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_network_acl.outpost[0].id",
                          "aws_network_acl.outpost[0]",
                          "aws_network_acl.outpost"
                        ]
                      },
                      "description": "ID of the outpost network ACL"
                    },
                    "outpost_subnet_arns": {
                      "expression": {
                        "references": [
                          "aws_subnet.outpost"
                        ]
                      },
                      "description": "List of ARNs of outpost subnets"
                    },
                    "outpost_subnets": {
                      "expression": {
                        "references": [
                          "aws_subnet.outpost"
                        ]
                      },
                      "description": "List of IDs of outpost subnets"
                    },
                    "outpost_subnets_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.outpost"
                        ]
                      },
                      "description": "List of cidr_blocks of outpost subnets"
                    },
                    "outpost_subnets_ipv6_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.outpost"
                        ]
                      },
                      "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
                    },
                    "private_ipv6_egress_route_ids": {
                      "expression": {
                        "references": [
                          "aws_route.private_ipv6_egress"
                        ]
                      },
                      "description": "List of IDs of the ipv6 egress route"
                    },
                    "private_nat_gateway_route_ids": {
                      "expression": {
                        "references": [
                          "aws_route.private_nat_gateway"
                        ]
                      },
                      "description": "List of IDs of the private nat gateway route"
                    },
                    "private_network_acl_arn": {
                      "expression": {
                        "references": [
                          "aws_network_acl.private[0].arn",
                          "aws_network_acl.private[0]",
                          "aws_network_acl.private"
                        ]
                      },
                      "description": "ARN of the private network ACL"
                    },
                    "private_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_network_acl.private[0].id",
                          "aws_network_acl.private[0]",
                          "aws_network_acl.private"
                        ]
                      },
                      "description": "ID of the private network ACL"
                    },
                    "private_route_table_association_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table_association.private"
                        ]
                      },
                      "description": "List of IDs of the private route table association"
                    },
                    "private_route_table_ids": {
                      "expression": {
                        "references": [
                          "local.private_route_table_ids"
                        ]
                      },
                      "description": "List of IDs of private route tables"
                    },
                    "private_subnet_arns": {
                      "expression": {
                        "references": [
                          "aws_subnet.private"
                        ]
                      },
                      "description": "List of ARNs of private subnets"
                    },
                    "private_subnets": {
                      "expression": {
                        "references": [
                          "aws_subnet.private"
                        ]
                      },
                      "description": "List of IDs of private subnets"
                    },
                    "private_subnets_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.private"
                        ]
                      },
                      "description": "List of cidr_blocks of private subnets"
                    },
                    "private_subnets_ipv6_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.private"
                        ]
                      },
                      "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
                    },
                    "public_internet_gateway_ipv6_route_id": {
                      "expression": {
                        "references": [
                          "aws_route.public_internet_gateway_ipv6[0].id",
                          "aws_route.public_internet_gateway_ipv6[0]",
                          "aws_route.public_internet_gateway_ipv6"
                        ]
                      },
                      "description": "ID of the IPv6 internet gateway route"
                    },
                    "public_internet_gateway_route_id": {
                      "expression": {
                        "references": [
                          "aws_route.public_internet_gateway[0].id",
                          "aws_route.public_internet_gateway[0]",
                          "aws_route.public_internet_gateway"
                        ]
                      },
                      "description": "ID of the internet gateway route"
                    },
                    "public_network_acl_arn": {
                      "expression": {
                        "references": [
                          "aws_network_acl.public[0].arn",
                          "aws_network_acl.public[0]",
                          "aws_network_acl.public"
                        ]
                      },
                      "description": "ARN of the public network ACL"
                    },
                    "public_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_network_acl.public[0].id",
                          "aws_network_acl.public[0]",
                          "aws_network_acl.public"
                        ]
                      },
                      "description": "ID of the public network ACL"
                    },
                    "public_route_table_association_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table_association.public"
                        ]
                      },
                      "description": "List of IDs of the public route table association"
                    },
                    "public_route_table_ids": {
                      "expression": {
                        "references": [
                          "local.public_route_table_ids"
                        ]
                      },
                      "description": "List of IDs of public route tables"
                    },
                    "public_subnet_arns": {
                      "expression": {
                        "references": [
                          "aws_subnet.public"
                        ]
                      },
                      "description": "List of ARNs of public subnets"
                    },
                    "public_subnets": {
                      "expression": {
                        "references": [
                          "aws_subnet.public"
                        ]
                      },
                      "description": "List of IDs of public subnets"
                    },
                    "public_subnets_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.public"
                        ]
                      },
                      "description": "List of cidr_blocks of public subnets"
                    },
                    "public_subnets_ipv6_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.public"
                        ]
                      },
                      "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
                    },
                    "redshift_network_acl_arn": {
                      "expression": {
                        "references": [
                          "aws_network_acl.redshift[0].arn",
                          "aws_network_acl.redshift[0]",
                          "aws_network_acl.redshift"
                        ]
                      },
                      "description": "ARN of the redshift network ACL"
                    },
                    "redshift_network_acl_id": {
                      "expression": {
                        "references": [
                          "aws_network_acl.redshift[0].id",
                          "aws_network_acl.redshift[0]",
                          "aws_network_acl.redshift"
                        ]
                      },
                      "description": "ID of the redshift network ACL"
                    },
                    "redshift_public_route_table_association_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table_association.redshift_public"
                        ]
                      },
                      "description": "List of IDs of the public redshift route table association"
                    },
                    "redshift_route_table_association_ids": {
                      "expression": {
                        "references": [
                          "aws_route_table_association.redshift"
                        ]
                      },
                      "description": "List of IDs of the redshift route table association"
                    },
                    "redshift_route_table_ids": {
                      "expression": {
                        "references": [
                          "local.redshift_route_table_ids",
                          "local.redshift_route_table_ids",
                          "var.enable_public_redshift",
                          "local.public_route_table_ids",
                          "local.private_route_table_ids"
                        ]
                      },
                      "description": "List of IDs of redshift route tables"
                    },
                    "redshift_subnet_arns": {
                      "expression": {
                        "references": [
                          "aws_subnet.redshift"
                        ]
                      },
                      "description": "List of ARNs of redshift subnets"
                    },
                    "redshift_subnet_group": {
                      "expression": {
                        "references": [
                          "aws_redshift_subnet_group.redshift[0].id",
                          "aws_redshift_subnet_group.redshift[0]",
                          "aws_redshift_subnet_group.redshift"
                        ]
                      },
                      "description": "ID of redshift subnet group"
                    },
                    "redshift_subnets": {
                      "expression": {
                        "references": [
                          "aws_subnet.redshift"
                        ]
                      },
                      "description": "List of IDs of redshift subnets"
                    },
                    "redshift_subnets_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.redshift"
                        ]
                      },
                      "description": "List of cidr_blocks of redshift subnets"
                    },
                    "redshift_subnets_ipv6_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_subnet.redshift"
                        ]
                      },
                      "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
                    },
                    "this_customer_gateway": {
                      "expression": {
                        "references": [
                          "aws_customer_gateway.this"
                        ]
                      },
                      "description": "Map of Customer Gateway attributes"
                    },
                    "vgw_arn": {
                      "expression": {
                        "references": [
                          "aws_vpn_gateway.this[0].arn",
                          "aws_vpn_gateway.this[0]",
                          "aws_vpn_gateway.this"
                        ]
                      },
                      "description": "The ARN of the VPN Gateway"
                    },
                    "vgw_id": {
                      "expression": {
                        "references": [
                          "aws_vpn_gateway.this[0].id",
                          "aws_vpn_gateway.this[0]",
                          "aws_vpn_gateway.this",
                          "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                          "aws_vpn_gateway_attachment.this[0]",
                          "aws_vpn_gateway_attachment.this"
                        ]
                      },
                      "description": "The ID of the VPN Gateway"
                    },
                    "vpc_arn": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].arn",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The ARN of the VPC"
                    },
                    "vpc_cidr_block": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].cidr_block",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The CIDR block of the VPC"
                    },
                    "vpc_enable_dns_hostnames": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].enable_dns_hostnames",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "Whether or not the VPC has DNS hostname support"
                    },
                    "vpc_enable_dns_support": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].enable_dns_support",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "Whether or not the VPC has DNS support"
                    },
                    "vpc_flow_log_cloudwatch_iam_role_arn": {
                      "expression": {
                        "references": [
                          "local.flow_log_iam_role_arn"
                        ]
                      },
                      "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                    },
                    "vpc_flow_log_deliver_cross_account_role": {
                      "expression": {
                        "references": [
                          "aws_flow_log.this[0].deliver_cross_account_role",
                          "aws_flow_log.this[0]",
                          "aws_flow_log.this"
                        ]
                      },
                      "description": "The ARN of the IAM role used when pushing logs cross account"
                    },
                    "vpc_flow_log_destination_arn": {
                      "expression": {
                        "references": [
                          "local.flow_log_destination_arn"
                        ]
                      },
                      "description": "The ARN of the destination for VPC Flow Logs"
                    },
                    "vpc_flow_log_destination_type": {
                      "expression": {
                        "references": [
                          "var.flow_log_destination_type"
                        ]
                      },
                      "description": "The type of the destination for VPC Flow Logs"
                    },
                    "vpc_flow_log_id": {
                      "expression": {
                        "references": [
                          "aws_flow_log.this[0].id",
                          "aws_flow_log.this[0]",
                          "aws_flow_log.this"
                        ]
                      },
                      "description": "The ID of the Flow Log resource"
                    },
                    "vpc_id": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].id",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The ID of the VPC"
                    },
                    "vpc_instance_tenancy": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].instance_tenancy",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "Tenancy of instances spin up within VPC"
                    },
                    "vpc_ipv6_association_id": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].ipv6_association_id",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The association ID for the IPv6 CIDR block"
                    },
                    "vpc_ipv6_cidr_block": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].ipv6_cidr_block",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The IPv6 CIDR block"
                    },
                    "vpc_main_route_table_id": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].main_route_table_id",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The ID of the main route table associated with this VPC"
                    },
                    "vpc_owner_id": {
                      "expression": {
                        "references": [
                          "aws_vpc.this[0].owner_id",
                          "aws_vpc.this[0]",
                          "aws_vpc.this"
                        ]
                      },
                      "description": "The ID of the AWS account that owns the VPC"
                    },
                    "vpc_secondary_cidr_blocks": {
                      "expression": {
                        "references": [
                          "aws_vpc_ipv4_cidr_block_association.this"
                        ]
                      },
                      "description": "List of secondary CIDR blocks of the VPC"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_cloudwatch_log_group.flow_log",
                      "mode": "managed",
                      "type": "aws_cloudwatch_log_group",
                      "name": "flow_log",
                      "provider_config_key": "aws",
                      "expressions": {
                        "kms_key_id": {
                          "references": [
                            "var.flow_log_cloudwatch_log_group_kms_key_id"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.flow_log_cloudwatch_log_group_name_prefix",
                            "local.flow_log_cloudwatch_log_group_name_suffix"
                          ]
                        },
                        "retention_in_days": {
                          "references": [
                            "var.flow_log_cloudwatch_log_group_retention_in_days"
                          ]
                        },
                        "skip_destroy": {
                          "references": [
                            "var.flow_log_cloudwatch_log_group_skip_destroy"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.vpc_flow_log_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_flow_log_cloudwatch_log_group"
                        ]
                      }
                    },
                    {
                      "address": "aws_customer_gateway.this",
                      "mode": "managed",
                      "type": "aws_customer_gateway",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "bgp_asn": {
                          "references": [
                            "each.value[\"bgp_asn\"]",
                            "each.value"
                          ]
                        },
                        "device_name": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "ip_address": {
                          "references": [
                            "each.value[\"ip_address\"]",
                            "each.value"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "each.key",
                            "var.tags",
                            "var.customer_gateway_tags"
                          ]
                        },
                        "type": {
                          "constant_value": "ipsec.1"
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "var.customer_gateways"
                        ]
                      }
                    },
                    {
                      "address": "aws_db_subnet_group.database",
                      "mode": "managed",
                      "type": "aws_db_subnet_group",
                      "name": "database",
                      "provider_config_key": "aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.name"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.database_subnet_group_name",
                            "var.name"
                          ]
                        },
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.database"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.database_subnet_group_name",
                            "var.name",
                            "var.tags",
                            "var.database_subnet_group_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_subnets",
                          "var.create_database_subnet_group"
                        ]
                      }
                    },
                    {
                      "address": "aws_default_network_acl.this",
                      "mode": "managed",
                      "type": "aws_default_network_acl",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "default_network_acl_id": {
                          "references": [
                            "aws_vpc.this[0].default_network_acl_id",
                            "aws_vpc.this[0]",
                            "aws_vpc.this"
                          ]
                        },
                        "subnet_ids": {
                          "constant_value": null
                        },
                        "tags": {
                          "references": [
                            "var.default_network_acl_name",
                            "var.name",
                            "var.tags",
                            "var.default_network_acl_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.manage_default_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_default_route_table.default",
                      "mode": "managed",
                      "type": "aws_default_route_table",
                      "name": "default",
                      "provider_config_key": "aws",
                      "expressions": {
                        "default_route_table_id": {
                          "references": [
                            "aws_vpc.this[0].default_route_table_id",
                            "aws_vpc.this[0]",
                            "aws_vpc.this"
                          ]
                        },
                        "propagating_vgws": {
                          "references": [
                            "var.default_route_table_propagating_vgws"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.default_route_table_name",
                            "var.name",
                            "var.tags",
                            "var.default_route_table_tags"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          },
                          "update": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.manage_default_route_table"
                        ]
                      }
                    },
                    {
                      "address": "aws_default_security_group.this",
                      "mode": "managed",
                      "type": "aws_default_security_group",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.default_security_group_name",
                            "var.name",
                            "var.tags",
                            "var.default_security_group_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "aws_vpc.this[0].id",
                            "aws_vpc.this[0]",
                            "aws_vpc.this"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.manage_default_security_group"
                        ]
                      }
                    },
                    {
                      "address": "aws_default_vpc.this",
                      "mode": "managed",
                      "type": "aws_default_vpc",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "enable_dns_hostnames": {
                          "references": [
                            "var.default_vpc_enable_dns_hostnames"
                          ]
                        },
                        "enable_dns_support": {
                          "references": [
                            "var.default_vpc_enable_dns_support"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.default_vpc_name",
                            "var.tags",
                            "var.default_vpc_tags"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "var.manage_default_vpc"
                        ]
                      }
                    },
                    {
                      "address": "aws_egress_only_internet_gateway.this",
                      "mode": "managed",
                      "type": "aws_egress_only_internet_gateway",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.name",
                            "var.tags",
                            "var.igw_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.create_egress_only_igw",
                          "var.enable_ipv6",
                          "local.max_subnet_length"
                        ]
                      }
                    },
                    {
                      "address": "aws_eip.nat",
                      "mode": "managed",
                      "type": "aws_eip",
                      "name": "nat",
                      "provider_config_key": "aws",
                      "expressions": {
                        "domain": {
                          "constant_value": "vpc"
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.azs",
                            "var.single_nat_gateway",
                            "count.index",
                            "var.tags",
                            "var.nat_eip_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.enable_nat_gateway",
                          "var.reuse_nat_ips",
                          "local.nat_gateway_count"
                        ]
                      },
                      "depends_on": [
                        "aws_internet_gateway.this"
                      ]
                    },
                    {
                      "address": "aws_elasticache_subnet_group.elasticache",
                      "mode": "managed",
                      "type": "aws_elasticache_subnet_group",
                      "name": "elasticache",
                      "provider_config_key": "aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.name"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.elasticache_subnet_group_name",
                            "var.name"
                          ]
                        },
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.elasticache"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.elasticache_subnet_group_name",
                            "var.name",
                            "var.tags",
                            "var.elasticache_subnet_group_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_elasticache_subnets",
                          "var.create_elasticache_subnet_group"
                        ]
                      }
                    },
                    {
                      "address": "aws_flow_log.this",
                      "mode": "managed",
                      "type": "aws_flow_log",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "deliver_cross_account_role": {
                          "references": [
                            "var.flow_log_deliver_cross_account_role"
                          ]
                        },
                        "iam_role_arn": {
                          "references": [
                            "local.flow_log_iam_role_arn"
                          ]
                        },
                        "log_destination": {
                          "references": [
                            "local.flow_log_destination_arn"
                          ]
                        },
                        "log_destination_type": {
                          "references": [
                            "var.flow_log_destination_type"
                          ]
                        },
                        "log_format": {
                          "references": [
                            "var.flow_log_log_format"
                          ]
                        },
                        "max_aggregation_interval": {
                          "references": [
                            "var.flow_log_max_aggregation_interval"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.vpc_flow_log_tags"
                          ]
                        },
                        "traffic_type": {
                          "references": [
                            "var.flow_log_traffic_type"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.enable_flow_log"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                      "mode": "managed",
                      "type": "aws_iam_policy",
                      "name": "vpc_flow_log_cloudwatch",
                      "provider_config_key": "aws",
                      "expressions": {
                        "name_prefix": {
                          "constant_value": "vpc-flow-log-to-cloudwatch-"
                        },
                        "policy": {
                          "references": [
                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.vpc_flow_log_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_flow_log_cloudwatch_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "vpc_flow_log_cloudwatch",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                          ]
                        },
                        "name_prefix": {
                          "constant_value": "vpc-flow-log-role-"
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.vpc_flow_log_permissions_boundary"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.vpc_flow_log_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_flow_log_cloudwatch_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "vpc_flow_log_cloudwatch",
                      "provider_config_key": "aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                            "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                            "aws_iam_policy.vpc_flow_log_cloudwatch"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                            "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                            "aws_iam_role.vpc_flow_log_cloudwatch"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_flow_log_cloudwatch_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "aws_internet_gateway.this",
                      "mode": "managed",
                      "type": "aws_internet_gateway",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.name",
                            "var.tags",
                            "var.igw_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "var.create_igw"
                        ]
                      }
                    },
                    {
                      "address": "aws_nat_gateway.this",
                      "mode": "managed",
                      "type": "aws_nat_gateway",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "allocation_id": {
                          "references": [
                            "local.nat_gateway_ips",
                            "var.single_nat_gateway",
                            "count.index"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.public",
                            "var.single_nat_gateway",
                            "count.index"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.azs",
                            "var.single_nat_gateway",
                            "count.index",
                            "var.tags",
                            "var.nat_gateway_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.enable_nat_gateway",
                          "local.nat_gateway_count"
                        ]
                      },
                      "depends_on": [
                        "aws_internet_gateway.this"
                      ]
                    },
                    {
                      "address": "aws_network_acl.database",
                      "mode": "managed",
                      "type": "aws_network_acl",
                      "name": "database",
                      "provider_config_key": "aws",
                      "expressions": {
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.database"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.database_subnet_suffix",
                            "var.tags",
                            "var.database_acl_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl.elasticache",
                      "mode": "managed",
                      "type": "aws_network_acl",
                      "name": "elasticache",
                      "provider_config_key": "aws",
                      "expressions": {
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.elasticache"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.elasticache_subnet_suffix",
                            "var.tags",
                            "var.elasticache_acl_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_elasticache_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl.intra",
                      "mode": "managed",
                      "type": "aws_network_acl",
                      "name": "intra",
                      "provider_config_key": "aws",
                      "expressions": {
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.intra"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.intra_subnet_suffix",
                            "var.tags",
                            "var.intra_acl_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_intra_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl.outpost",
                      "mode": "managed",
                      "type": "aws_network_acl",
                      "name": "outpost",
                      "provider_config_key": "aws",
                      "expressions": {
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.outpost"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.outpost_subnet_suffix",
                            "var.tags",
                            "var.outpost_acl_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_outpost_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl.private",
                      "mode": "managed",
                      "type": "aws_network_acl",
                      "name": "private",
                      "provider_config_key": "aws",
                      "expressions": {
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.private"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.private_subnet_suffix",
                            "var.tags",
                            "var.private_acl_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_private_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl.public",
                      "mode": "managed",
                      "type": "aws_network_acl",
                      "name": "public",
                      "provider_config_key": "aws",
                      "expressions": {
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.public"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.public_subnet_suffix",
                            "var.tags",
                            "var.public_acl_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "var.public_dedicated_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl.redshift",
                      "mode": "managed",
                      "type": "aws_network_acl",
                      "name": "redshift",
                      "provider_config_key": "aws",
                      "expressions": {
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.redshift"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.redshift_subnet_suffix",
                            "var.tags",
                            "var.redshift_acl_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_network_acl"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.database_inbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "database_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": false
                        },
                        "from_port": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.database[0].id",
                            "aws_network_acl.database[0]",
                            "aws_network_acl.database"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.database_inbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_network_acl",
                          "var.database_inbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.database_outbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "database_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": true
                        },
                        "from_port": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.database[0].id",
                            "aws_network_acl.database[0]",
                            "aws_network_acl.database"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.database_outbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_network_acl",
                          "var.database_outbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.elasticache_inbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "elasticache_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": false
                        },
                        "from_port": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.elasticache[0].id",
                            "aws_network_acl.elasticache[0]",
                            "aws_network_acl.elasticache"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.elasticache_inbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_elasticache_network_acl",
                          "var.elasticache_inbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.elasticache_outbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "elasticache_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": true
                        },
                        "from_port": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.elasticache[0].id",
                            "aws_network_acl.elasticache[0]",
                            "aws_network_acl.elasticache"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.elasticache_outbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_elasticache_network_acl",
                          "var.elasticache_outbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.intra_inbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "intra_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": false
                        },
                        "from_port": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.intra[0].id",
                            "aws_network_acl.intra[0]",
                            "aws_network_acl.intra"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.intra_inbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_intra_network_acl",
                          "var.intra_inbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.intra_outbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "intra_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": true
                        },
                        "from_port": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.intra[0].id",
                            "aws_network_acl.intra[0]",
                            "aws_network_acl.intra"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.intra_outbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_intra_network_acl",
                          "var.intra_outbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.outpost_inbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "outpost_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": false
                        },
                        "from_port": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.outpost[0].id",
                            "aws_network_acl.outpost[0]",
                            "aws_network_acl.outpost"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.outpost_inbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_outpost_network_acl",
                          "var.outpost_inbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.outpost_outbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "outpost_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": true
                        },
                        "from_port": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.outpost[0].id",
                            "aws_network_acl.outpost[0]",
                            "aws_network_acl.outpost"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.outpost_outbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_outpost_network_acl",
                          "var.outpost_outbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.private_inbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "private_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": false
                        },
                        "from_port": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.private[0].id",
                            "aws_network_acl.private[0]",
                            "aws_network_acl.private"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.private_inbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_private_network_acl",
                          "var.private_inbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.private_outbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "private_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": true
                        },
                        "from_port": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.private[0].id",
                            "aws_network_acl.private[0]",
                            "aws_network_acl.private"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.private_outbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_private_network_acl",
                          "var.private_outbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.public_inbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "public_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": false
                        },
                        "from_port": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.public[0].id",
                            "aws_network_acl.public[0]",
                            "aws_network_acl.public"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.public_inbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "var.public_dedicated_network_acl",
                          "var.public_inbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.public_outbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "public_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": true
                        },
                        "from_port": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.public[0].id",
                            "aws_network_acl.public[0]",
                            "aws_network_acl.public"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.public_outbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "var.public_dedicated_network_acl",
                          "var.public_outbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.redshift_inbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "redshift_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": false
                        },
                        "from_port": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.redshift[0].id",
                            "aws_network_acl.redshift[0]",
                            "aws_network_acl.redshift"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.redshift_inbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_network_acl",
                          "var.redshift_inbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_network_acl_rule.redshift_outbound",
                      "mode": "managed",
                      "type": "aws_network_acl_rule",
                      "name": "redshift_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "egress": {
                          "constant_value": true
                        },
                        "from_port": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_code": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "icmp_type": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "network_acl_id": {
                          "references": [
                            "aws_network_acl.redshift[0].id",
                            "aws_network_acl.redshift[0]",
                            "aws_network_acl.redshift"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_action": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "rule_number": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.redshift_outbound_acl_rules",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_network_acl",
                          "var.redshift_outbound_acl_rules"
                        ]
                      }
                    },
                    {
                      "address": "aws_redshift_subnet_group.redshift",
                      "mode": "managed",
                      "type": "aws_redshift_subnet_group",
                      "name": "redshift",
                      "provider_config_key": "aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.name"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.redshift_subnet_group_name",
                            "var.name"
                          ]
                        },
                        "subnet_ids": {
                          "references": [
                            "aws_subnet.redshift"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.redshift_subnet_group_name",
                            "var.name",
                            "var.tags",
                            "var.redshift_subnet_group_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_subnets",
                          "var.create_redshift_subnet_group"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.database_dns64_nat_gateway",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "database_dns64_nat_gateway",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_ipv6_cidr_block": {
                          "constant_value": "64:ff9b::/96"
                        },
                        "nat_gateway_id": {
                          "references": [
                            "aws_nat_gateway.this",
                            "count.index"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.database",
                            "count.index"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_route_table",
                          "var.create_database_internet_gateway_route",
                          "var.create_database_nat_gateway_route",
                          "var.enable_nat_gateway",
                          "var.enable_ipv6",
                          "var.private_subnet_enable_dns64",
                          "var.single_nat_gateway",
                          "local.len_database_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.database_internet_gateway",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "database_internet_gateway",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_cidr_block": {
                          "constant_value": "0.0.0.0/0"
                        },
                        "gateway_id": {
                          "references": [
                            "aws_internet_gateway.this[0].id",
                            "aws_internet_gateway.this[0]",
                            "aws_internet_gateway.this"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.database[0].id",
                            "aws_route_table.database[0]",
                            "aws_route_table.database"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_route_table",
                          "var.create_igw",
                          "var.create_database_internet_gateway_route",
                          "var.create_database_nat_gateway_route"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.database_ipv6_egress",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "database_ipv6_egress",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_ipv6_cidr_block": {
                          "constant_value": "::/0"
                        },
                        "egress_only_gateway_id": {
                          "references": [
                            "aws_egress_only_internet_gateway.this[0].id",
                            "aws_egress_only_internet_gateway.this[0]",
                            "aws_egress_only_internet_gateway.this"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.database[0].id",
                            "aws_route_table.database[0]",
                            "aws_route_table.database"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_route_table",
                          "var.create_egress_only_igw",
                          "var.enable_ipv6",
                          "var.create_database_internet_gateway_route"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.database_nat_gateway",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "database_nat_gateway",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_cidr_block": {
                          "constant_value": "0.0.0.0/0"
                        },
                        "nat_gateway_id": {
                          "references": [
                            "aws_nat_gateway.this",
                            "count.index"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.database",
                            "count.index"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_route_table",
                          "var.create_database_internet_gateway_route",
                          "var.create_database_nat_gateway_route",
                          "var.enable_nat_gateway",
                          "var.single_nat_gateway",
                          "local.len_database_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.private_dns64_nat_gateway",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "private_dns64_nat_gateway",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_ipv6_cidr_block": {
                          "constant_value": "64:ff9b::/96"
                        },
                        "nat_gateway_id": {
                          "references": [
                            "aws_nat_gateway.this",
                            "count.index"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.private",
                            "count.index"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.enable_nat_gateway",
                          "var.enable_ipv6",
                          "var.private_subnet_enable_dns64",
                          "local.nat_gateway_count"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.private_ipv6_egress",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "private_ipv6_egress",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_ipv6_cidr_block": {
                          "constant_value": "::/0"
                        },
                        "egress_only_gateway_id": {
                          "references": [
                            "aws_egress_only_internet_gateway.this"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.private",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.create_egress_only_igw",
                          "var.enable_ipv6",
                          "local.len_private_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.private_nat_gateway",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "private_nat_gateway",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_cidr_block": {
                          "references": [
                            "var.nat_gateway_destination_cidr_block"
                          ]
                        },
                        "nat_gateway_id": {
                          "references": [
                            "aws_nat_gateway.this",
                            "count.index"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.private",
                            "count.index"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.enable_nat_gateway",
                          "local.nat_gateway_count"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.public_internet_gateway",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "public_internet_gateway",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_cidr_block": {
                          "constant_value": "0.0.0.0/0"
                        },
                        "gateway_id": {
                          "references": [
                            "aws_internet_gateway.this[0].id",
                            "aws_internet_gateway.this[0]",
                            "aws_internet_gateway.this"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.public[0].id",
                            "aws_route_table.public[0]",
                            "aws_route_table.public"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "constant_value": "5m"
                          }
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "var.create_igw"
                        ]
                      }
                    },
                    {
                      "address": "aws_route.public_internet_gateway_ipv6",
                      "mode": "managed",
                      "type": "aws_route",
                      "name": "public_internet_gateway_ipv6",
                      "provider_config_key": "aws",
                      "expressions": {
                        "destination_ipv6_cidr_block": {
                          "constant_value": "::/0"
                        },
                        "gateway_id": {
                          "references": [
                            "aws_internet_gateway.this[0].id",
                            "aws_internet_gateway.this[0]",
                            "aws_internet_gateway.this"
                          ]
                        },
                        "route_table_id": {
                          "references": [
                            "aws_route_table.public[0].id",
                            "aws_route_table.public[0]",
                            "aws_route_table.public"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "var.create_igw",
                          "var.enable_ipv6"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table.database",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "database",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.single_nat_gateway",
                            "var.create_database_internet_gateway_route",
                            "var.name",
                            "var.database_subnet_suffix",
                            "var.name",
                            "var.database_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.database_route_table_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_route_table",
                          "var.single_nat_gateway",
                          "var.create_database_internet_gateway_route",
                          "local.len_database_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table.elasticache",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "elasticache",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.name",
                            "var.elasticache_subnet_suffix",
                            "var.tags",
                            "var.elasticache_route_table_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_elasticache_route_table"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table.intra",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "intra",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.name",
                            "var.intra_subnet_suffix",
                            "var.tags",
                            "var.intra_route_table_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_intra_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table.private",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "private",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.single_nat_gateway",
                            "var.name",
                            "var.private_subnet_suffix",
                            "var.name",
                            "var.private_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.private_route_table_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_private_subnets",
                          "local.max_subnet_length",
                          "local.nat_gateway_count"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table.public",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "public",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.name",
                            "var.public_subnet_suffix",
                            "var.tags",
                            "var.public_route_table_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table.redshift",
                      "mode": "managed",
                      "type": "aws_route_table",
                      "name": "redshift",
                      "provider_config_key": "aws",
                      "expressions": {
                        "tags": {
                          "references": [
                            "var.name",
                            "var.redshift_subnet_suffix",
                            "var.tags",
                            "var.redshift_route_table_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_route_table"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.database",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "database",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.database",
                            "aws_route_table.private",
                            "var.create_database_subnet_route_table",
                            "var.single_nat_gateway",
                            "var.create_database_internet_gateway_route",
                            "count.index",
                            "count.index"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.database",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_database_subnets",
                          "local.len_database_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.elasticache",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "elasticache",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.elasticache",
                            "aws_route_table.private",
                            "var.single_nat_gateway",
                            "var.create_elasticache_subnet_route_table",
                            "count.index"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.elasticache",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_elasticache_subnets",
                          "local.len_elasticache_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.intra",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "intra",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.intra"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.intra",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_intra_subnets",
                          "local.len_intra_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.outpost",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "outpost",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.private",
                            "var.single_nat_gateway",
                            "count.index"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.outpost",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_outpost_subnets",
                          "local.len_outpost_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.private",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "private",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.private",
                            "var.single_nat_gateway",
                            "count.index"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.private",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_private_subnets",
                          "local.len_private_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.public",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "public",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.public[0].id",
                            "aws_route_table.public[0]",
                            "aws_route_table.public"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.public",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "local.len_public_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.redshift",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "redshift",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.redshift",
                            "aws_route_table.private",
                            "var.single_nat_gateway",
                            "var.create_redshift_subnet_route_table",
                            "count.index"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.redshift",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_subnets",
                          "var.enable_public_redshift",
                          "local.len_redshift_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_route_table_association.redshift_public",
                      "mode": "managed",
                      "type": "aws_route_table_association",
                      "name": "redshift_public",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.redshift",
                            "aws_route_table.public",
                            "var.single_nat_gateway",
                            "var.create_redshift_subnet_route_table",
                            "count.index"
                          ]
                        },
                        "subnet_id": {
                          "references": [
                            "aws_subnet.redshift",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_subnets",
                          "var.enable_public_redshift",
                          "local.len_redshift_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_subnet.database",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "database",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_ipv6_address_on_creation": {
                          "references": [
                            "var.enable_ipv6",
                            "var.database_subnet_ipv6_native",
                            "var.database_subnet_assign_ipv6_address_on_creation"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "availability_zone_id": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.database_subnet_ipv6_native",
                            "var.database_subnets",
                            "count.index"
                          ]
                        },
                        "enable_dns64": {
                          "references": [
                            "var.enable_ipv6",
                            "var.database_subnet_enable_dns64"
                          ]
                        },
                        "enable_resource_name_dns_a_record_on_launch": {
                          "references": [
                            "var.database_subnet_ipv6_native",
                            "var.database_subnet_enable_resource_name_dns_a_record_on_launch"
                          ]
                        },
                        "enable_resource_name_dns_aaaa_record_on_launch": {
                          "references": [
                            "var.enable_ipv6",
                            "var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.database_subnet_ipv6_prefixes",
                            "aws_vpc.this[0].ipv6_cidr_block",
                            "aws_vpc.this[0]",
                            "aws_vpc.this",
                            "var.database_subnet_ipv6_prefixes",
                            "count.index"
                          ]
                        },
                        "ipv6_native": {
                          "references": [
                            "var.enable_ipv6",
                            "var.database_subnet_ipv6_native"
                          ]
                        },
                        "private_dns_hostname_type_on_launch": {
                          "references": [
                            "var.database_subnet_private_dns_hostname_type_on_launch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.database_subnet_names",
                            "count.index",
                            "var.name",
                            "var.database_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.database_subnet_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_database_subnets",
                          "local.len_database_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_subnet.elasticache",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "elasticache",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_ipv6_address_on_creation": {
                          "references": [
                            "var.enable_ipv6",
                            "var.elasticache_subnet_ipv6_native",
                            "var.elasticache_subnet_assign_ipv6_address_on_creation"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "availability_zone_id": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.elasticache_subnet_ipv6_native",
                            "var.elasticache_subnets",
                            "count.index"
                          ]
                        },
                        "enable_dns64": {
                          "references": [
                            "var.enable_ipv6",
                            "var.elasticache_subnet_enable_dns64"
                          ]
                        },
                        "enable_resource_name_dns_a_record_on_launch": {
                          "references": [
                            "var.elasticache_subnet_ipv6_native",
                            "var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch"
                          ]
                        },
                        "enable_resource_name_dns_aaaa_record_on_launch": {
                          "references": [
                            "var.enable_ipv6",
                            "var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.elasticache_subnet_ipv6_prefixes",
                            "aws_vpc.this[0].ipv6_cidr_block",
                            "aws_vpc.this[0]",
                            "aws_vpc.this",
                            "var.elasticache_subnet_ipv6_prefixes",
                            "count.index"
                          ]
                        },
                        "ipv6_native": {
                          "references": [
                            "var.enable_ipv6",
                            "var.elasticache_subnet_ipv6_native"
                          ]
                        },
                        "private_dns_hostname_type_on_launch": {
                          "references": [
                            "var.elasticache_subnet_private_dns_hostname_type_on_launch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.elasticache_subnet_names",
                            "count.index",
                            "var.name",
                            "var.elasticache_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.elasticache_subnet_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_elasticache_subnets",
                          "local.len_elasticache_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_subnet.intra",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "intra",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_ipv6_address_on_creation": {
                          "references": [
                            "var.enable_ipv6",
                            "var.intra_subnet_ipv6_native",
                            "var.intra_subnet_assign_ipv6_address_on_creation"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "availability_zone_id": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.intra_subnet_ipv6_native",
                            "var.intra_subnets",
                            "count.index"
                          ]
                        },
                        "enable_dns64": {
                          "references": [
                            "var.enable_ipv6",
                            "var.intra_subnet_enable_dns64"
                          ]
                        },
                        "enable_resource_name_dns_a_record_on_launch": {
                          "references": [
                            "var.intra_subnet_ipv6_native",
                            "var.intra_subnet_enable_resource_name_dns_a_record_on_launch"
                          ]
                        },
                        "enable_resource_name_dns_aaaa_record_on_launch": {
                          "references": [
                            "var.enable_ipv6",
                            "var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.intra_subnet_ipv6_prefixes",
                            "aws_vpc.this[0].ipv6_cidr_block",
                            "aws_vpc.this[0]",
                            "aws_vpc.this",
                            "var.intra_subnet_ipv6_prefixes",
                            "count.index"
                          ]
                        },
                        "ipv6_native": {
                          "references": [
                            "var.enable_ipv6",
                            "var.intra_subnet_ipv6_native"
                          ]
                        },
                        "private_dns_hostname_type_on_launch": {
                          "references": [
                            "var.intra_subnet_private_dns_hostname_type_on_launch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.intra_subnet_names",
                            "count.index",
                            "var.name",
                            "var.intra_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.intra_subnet_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_intra_subnets",
                          "local.len_intra_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_subnet.outpost",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "outpost",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_ipv6_address_on_creation": {
                          "references": [
                            "var.enable_ipv6",
                            "var.outpost_subnet_ipv6_native",
                            "var.outpost_subnet_assign_ipv6_address_on_creation"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.outpost_az"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.outpost_subnet_ipv6_native",
                            "var.outpost_subnets",
                            "count.index"
                          ]
                        },
                        "customer_owned_ipv4_pool": {
                          "references": [
                            "var.customer_owned_ipv4_pool"
                          ]
                        },
                        "enable_dns64": {
                          "references": [
                            "var.enable_ipv6",
                            "var.outpost_subnet_enable_dns64"
                          ]
                        },
                        "enable_resource_name_dns_a_record_on_launch": {
                          "references": [
                            "var.outpost_subnet_ipv6_native",
                            "var.outpost_subnet_enable_resource_name_dns_a_record_on_launch"
                          ]
                        },
                        "enable_resource_name_dns_aaaa_record_on_launch": {
                          "references": [
                            "var.enable_ipv6",
                            "var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.outpost_subnet_ipv6_prefixes",
                            "aws_vpc.this[0].ipv6_cidr_block",
                            "aws_vpc.this[0]",
                            "aws_vpc.this",
                            "var.outpost_subnet_ipv6_prefixes",
                            "count.index"
                          ]
                        },
                        "ipv6_native": {
                          "references": [
                            "var.enable_ipv6",
                            "var.outpost_subnet_ipv6_native"
                          ]
                        },
                        "map_customer_owned_ip_on_launch": {
                          "references": [
                            "var.map_customer_owned_ip_on_launch"
                          ]
                        },
                        "outpost_arn": {
                          "references": [
                            "var.outpost_arn"
                          ]
                        },
                        "private_dns_hostname_type_on_launch": {
                          "references": [
                            "var.outpost_subnet_private_dns_hostname_type_on_launch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.outpost_subnet_names",
                            "count.index",
                            "var.name",
                            "var.outpost_subnet_suffix",
                            "var.outpost_az",
                            "var.tags",
                            "var.outpost_subnet_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_outpost_subnets",
                          "local.len_outpost_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_subnet.private",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "private",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_ipv6_address_on_creation": {
                          "references": [
                            "var.enable_ipv6",
                            "var.private_subnet_ipv6_native",
                            "var.private_subnet_assign_ipv6_address_on_creation"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "availability_zone_id": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.private_subnet_ipv6_native",
                            "var.private_subnets",
                            "count.index"
                          ]
                        },
                        "enable_dns64": {
                          "references": [
                            "var.enable_ipv6",
                            "var.private_subnet_enable_dns64"
                          ]
                        },
                        "enable_resource_name_dns_a_record_on_launch": {
                          "references": [
                            "var.private_subnet_ipv6_native",
                            "var.private_subnet_enable_resource_name_dns_a_record_on_launch"
                          ]
                        },
                        "enable_resource_name_dns_aaaa_record_on_launch": {
                          "references": [
                            "var.enable_ipv6",
                            "var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.private_subnet_ipv6_prefixes",
                            "aws_vpc.this[0].ipv6_cidr_block",
                            "aws_vpc.this[0]",
                            "aws_vpc.this",
                            "var.private_subnet_ipv6_prefixes",
                            "count.index"
                          ]
                        },
                        "ipv6_native": {
                          "references": [
                            "var.enable_ipv6",
                            "var.private_subnet_ipv6_native"
                          ]
                        },
                        "private_dns_hostname_type_on_launch": {
                          "references": [
                            "var.private_subnet_private_dns_hostname_type_on_launch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.private_subnet_names",
                            "count.index",
                            "var.name",
                            "var.private_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.private_subnet_tags",
                            "var.private_subnet_tags_per_az",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_private_subnets",
                          "local.len_private_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_subnet.public",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "public",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_ipv6_address_on_creation": {
                          "references": [
                            "var.enable_ipv6",
                            "var.public_subnet_ipv6_native",
                            "var.public_subnet_assign_ipv6_address_on_creation"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "availability_zone_id": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.public_subnet_ipv6_native",
                            "var.public_subnets",
                            "count.index"
                          ]
                        },
                        "enable_dns64": {
                          "references": [
                            "var.enable_ipv6",
                            "var.public_subnet_enable_dns64"
                          ]
                        },
                        "enable_resource_name_dns_a_record_on_launch": {
                          "references": [
                            "var.public_subnet_ipv6_native",
                            "var.public_subnet_enable_resource_name_dns_a_record_on_launch"
                          ]
                        },
                        "enable_resource_name_dns_aaaa_record_on_launch": {
                          "references": [
                            "var.enable_ipv6",
                            "var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.public_subnet_ipv6_prefixes",
                            "aws_vpc.this[0].ipv6_cidr_block",
                            "aws_vpc.this[0]",
                            "aws_vpc.this",
                            "var.public_subnet_ipv6_prefixes",
                            "count.index"
                          ]
                        },
                        "ipv6_native": {
                          "references": [
                            "var.enable_ipv6",
                            "var.public_subnet_ipv6_native"
                          ]
                        },
                        "map_public_ip_on_launch": {
                          "references": [
                            "var.map_public_ip_on_launch"
                          ]
                        },
                        "private_dns_hostname_type_on_launch": {
                          "references": [
                            "var.public_subnet_private_dns_hostname_type_on_launch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.public_subnet_names",
                            "count.index",
                            "var.name",
                            "var.public_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.public_subnet_tags",
                            "var.public_subnet_tags_per_az",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_public_subnets",
                          "var.one_nat_gateway_per_az",
                          "local.len_public_subnets",
                          "var.azs",
                          "local.len_public_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_subnet.redshift",
                      "mode": "managed",
                      "type": "aws_subnet",
                      "name": "redshift",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_ipv6_address_on_creation": {
                          "references": [
                            "var.enable_ipv6",
                            "var.redshift_subnet_ipv6_native",
                            "var.redshift_subnet_assign_ipv6_address_on_creation"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "availability_zone_id": {
                          "references": [
                            "var.azs",
                            "count.index",
                            "var.azs",
                            "count.index"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.redshift_subnet_ipv6_native",
                            "var.redshift_subnets",
                            "count.index"
                          ]
                        },
                        "enable_dns64": {
                          "references": [
                            "var.enable_ipv6",
                            "var.redshift_subnet_enable_dns64"
                          ]
                        },
                        "enable_resource_name_dns_a_record_on_launch": {
                          "references": [
                            "var.redshift_subnet_ipv6_native",
                            "var.redshift_subnet_enable_resource_name_dns_a_record_on_launch"
                          ]
                        },
                        "enable_resource_name_dns_aaaa_record_on_launch": {
                          "references": [
                            "var.enable_ipv6",
                            "var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.redshift_subnet_ipv6_prefixes",
                            "aws_vpc.this[0].ipv6_cidr_block",
                            "aws_vpc.this[0]",
                            "aws_vpc.this",
                            "var.redshift_subnet_ipv6_prefixes",
                            "count.index"
                          ]
                        },
                        "ipv6_native": {
                          "references": [
                            "var.enable_ipv6",
                            "var.redshift_subnet_ipv6_native"
                          ]
                        },
                        "private_dns_hostname_type_on_launch": {
                          "references": [
                            "var.redshift_subnet_private_dns_hostname_type_on_launch"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.redshift_subnet_names",
                            "count.index",
                            "var.name",
                            "var.redshift_subnet_suffix",
                            "var.azs",
                            "count.index",
                            "var.tags",
                            "var.redshift_subnet_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_redshift_subnets",
                          "local.len_redshift_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpc.this",
                      "mode": "managed",
                      "type": "aws_vpc",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assign_generated_ipv6_cidr_block": {
                          "references": [
                            "var.enable_ipv6",
                            "var.use_ipam_pool"
                          ]
                        },
                        "cidr_block": {
                          "references": [
                            "var.use_ipam_pool",
                            "var.cidr"
                          ]
                        },
                        "enable_dns_hostnames": {
                          "references": [
                            "var.enable_dns_hostnames"
                          ]
                        },
                        "enable_dns_support": {
                          "references": [
                            "var.enable_dns_support"
                          ]
                        },
                        "enable_network_address_usage_metrics": {
                          "references": [
                            "var.enable_network_address_usage_metrics"
                          ]
                        },
                        "instance_tenancy": {
                          "references": [
                            "var.instance_tenancy"
                          ]
                        },
                        "ipv4_ipam_pool_id": {
                          "references": [
                            "var.ipv4_ipam_pool_id"
                          ]
                        },
                        "ipv4_netmask_length": {
                          "references": [
                            "var.ipv4_netmask_length"
                          ]
                        },
                        "ipv6_cidr_block": {
                          "references": [
                            "var.ipv6_cidr"
                          ]
                        },
                        "ipv6_cidr_block_network_border_group": {
                          "references": [
                            "var.ipv6_cidr_block_network_border_group"
                          ]
                        },
                        "ipv6_ipam_pool_id": {
                          "references": [
                            "var.ipv6_ipam_pool_id"
                          ]
                        },
                        "ipv6_netmask_length": {
                          "references": [
                            "var.ipv6_netmask_length"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.tags",
                            "var.vpc_tags"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_vpc"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpc_dhcp_options.this",
                      "mode": "managed",
                      "type": "aws_vpc_dhcp_options",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "domain_name": {
                          "references": [
                            "var.dhcp_options_domain_name"
                          ]
                        },
                        "domain_name_servers": {
                          "references": [
                            "var.dhcp_options_domain_name_servers"
                          ]
                        },
                        "netbios_name_servers": {
                          "references": [
                            "var.dhcp_options_netbios_name_servers"
                          ]
                        },
                        "netbios_node_type": {
                          "references": [
                            "var.dhcp_options_netbios_node_type"
                          ]
                        },
                        "ntp_servers": {
                          "references": [
                            "var.dhcp_options_ntp_servers"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.tags",
                            "var.dhcp_options_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.enable_dhcp_options"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpc_dhcp_options_association.this",
                      "mode": "managed",
                      "type": "aws_vpc_dhcp_options_association",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "dhcp_options_id": {
                          "references": [
                            "aws_vpc_dhcp_options.this[0].id",
                            "aws_vpc_dhcp_options.this[0]",
                            "aws_vpc_dhcp_options.this"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.enable_dhcp_options"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpc_ipv4_cidr_block_association.this",
                      "mode": "managed",
                      "type": "aws_vpc_ipv4_cidr_block_association",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_block": {
                          "references": [
                            "var.secondary_cidr_blocks",
                            "count.index"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "aws_vpc.this[0].id",
                            "aws_vpc.this[0]",
                            "aws_vpc.this"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.secondary_cidr_blocks",
                          "var.secondary_cidr_blocks"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpn_gateway.this",
                      "mode": "managed",
                      "type": "aws_vpn_gateway",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "amazon_side_asn": {
                          "references": [
                            "var.amazon_side_asn"
                          ]
                        },
                        "availability_zone": {
                          "references": [
                            "var.vpn_gateway_az"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.tags",
                            "var.vpn_gateway_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.enable_vpn_gateway"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpn_gateway_attachment.this",
                      "mode": "managed",
                      "type": "aws_vpn_gateway_attachment",
                      "name": "this",
                      "provider_config_key": "aws",
                      "expressions": {
                        "vpc_id": {
                          "references": [
                            "local.vpc_id"
                          ]
                        },
                        "vpn_gateway_id": {
                          "references": [
                            "var.vpn_gateway_id"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.vpn_gateway_id"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpn_gateway_route_propagation.intra",
                      "mode": "managed",
                      "type": "aws_vpn_gateway_route_propagation",
                      "name": "intra",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.intra",
                            "count.index"
                          ]
                        },
                        "vpn_gateway_id": {
                          "references": [
                            "aws_vpn_gateway.this",
                            "aws_vpn_gateway_attachment.this",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.propagate_intra_route_tables_vgw",
                          "var.enable_vpn_gateway",
                          "var.vpn_gateway_id",
                          "local.len_intra_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpn_gateway_route_propagation.private",
                      "mode": "managed",
                      "type": "aws_vpn_gateway_route_propagation",
                      "name": "private",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.private",
                            "count.index"
                          ]
                        },
                        "vpn_gateway_id": {
                          "references": [
                            "aws_vpn_gateway.this",
                            "aws_vpn_gateway_attachment.this",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.propagate_private_route_tables_vgw",
                          "var.enable_vpn_gateway",
                          "var.vpn_gateway_id",
                          "local.len_private_subnets"
                        ]
                      }
                    },
                    {
                      "address": "aws_vpn_gateway_route_propagation.public",
                      "mode": "managed",
                      "type": "aws_vpn_gateway_route_propagation",
                      "name": "public",
                      "provider_config_key": "aws",
                      "expressions": {
                        "route_table_id": {
                          "references": [
                            "aws_route_table.public",
                            "count.index"
                          ]
                        },
                        "vpn_gateway_id": {
                          "references": [
                            "aws_vpn_gateway.this",
                            "aws_vpn_gateway_attachment.this",
                            "count.index"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_vpc",
                          "var.propagate_public_route_tables_vgw",
                          "var.enable_vpn_gateway",
                          "var.vpn_gateway_id"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "flow_log_cloudwatch_assume_role",
                      "provider_config_key": "aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "constant_value": [
                                    "vpc-flow-logs.amazonaws.com"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ],
                            "sid": {
                              "constant_value": "AWSVPCFlowLogsAssumeRole"
                            }
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_flow_log_cloudwatch_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "vpc_flow_log_cloudwatch",
                      "provider_config_key": "aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogGroups",
                                "logs:DescribeLogStreams"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "resources": {
                              "constant_value": [
                                "*"
                              ]
                            },
                            "sid": {
                              "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                            }
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_flow_log_cloudwatch_iam_role"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "amazon_side_asn": {
                      "default": "64512",
                      "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN"
                    },
                    "azs": {
                      "default": [],
                      "description": "A list of availability zones names or ids in the region"
                    },
                    "cidr": {
                      "default": "10.0.0.0/16",
                      "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`"
                    },
                    "create_database_internet_gateway_route": {
                      "default": false,
                      "description": "Controls if an internet gateway route for public database access should be created"
                    },
                    "create_database_nat_gateway_route": {
                      "default": false,
                      "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
                    },
                    "create_database_subnet_group": {
                      "default": true,
                      "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
                    },
                    "create_database_subnet_route_table": {
                      "default": false,
                      "description": "Controls if separate route table for database should be created"
                    },
                    "create_egress_only_igw": {
                      "default": true,
                      "description": "Controls if an Egress Only Internet Gateway is created and its related routes"
                    },
                    "create_elasticache_subnet_group": {
                      "default": true,
                      "description": "Controls if elasticache subnet group should be created"
                    },
                    "create_elasticache_subnet_route_table": {
                      "default": false,
                      "description": "Controls if separate route table for elasticache should be created"
                    },
                    "create_flow_log_cloudwatch_iam_role": {
                      "default": false,
                      "description": "Whether to create IAM role for VPC Flow Logs"
                    },
                    "create_flow_log_cloudwatch_log_group": {
                      "default": false,
                      "description": "Whether to create CloudWatch log group for VPC Flow Logs"
                    },
                    "create_igw": {
                      "default": true,
                      "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them"
                    },
                    "create_redshift_subnet_group": {
                      "default": true,
                      "description": "Controls if redshift subnet group should be created"
                    },
                    "create_redshift_subnet_route_table": {
                      "default": false,
                      "description": "Controls if separate route table for redshift should be created"
                    },
                    "create_vpc": {
                      "default": true,
                      "description": "Controls if VPC should be created (it affects almost all resources)"
                    },
                    "customer_gateway_tags": {
                      "default": {},
                      "description": "Additional tags for the Customer Gateway"
                    },
                    "customer_gateways": {
                      "default": {},
                      "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
                    },
                    "customer_owned_ipv4_pool": {
                      "default": null,
                      "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured"
                    },
                    "database_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the database subnets network ACL"
                    },
                    "database_dedicated_network_acl": {
                      "default": false,
                      "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
                    },
                    "database_inbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Database subnets inbound network ACL rules"
                    },
                    "database_outbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Database subnets outbound network ACL rules"
                    },
                    "database_route_table_tags": {
                      "default": {},
                      "description": "Additional tags for the database route tables"
                    },
                    "database_subnet_assign_ipv6_address_on_creation": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                    },
                    "database_subnet_enable_dns64": {
                      "default": true,
                      "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                    },
                    "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                      "default": false,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                    },
                    "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                      "default": true,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                    },
                    "database_subnet_group_name": {
                      "default": null,
                      "description": "Name of database subnet group"
                    },
                    "database_subnet_group_tags": {
                      "default": {},
                      "description": "Additional tags for the database subnet group"
                    },
                    "database_subnet_ipv6_native": {
                      "default": false,
                      "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                    },
                    "database_subnet_ipv6_prefixes": {
                      "default": [],
                      "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                    },
                    "database_subnet_names": {
                      "default": [],
                      "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated"
                    },
                    "database_subnet_private_dns_hostname_type_on_launch": {
                      "default": null,
                      "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                    },
                    "database_subnet_suffix": {
                      "default": "db",
                      "description": "Suffix to append to database subnets name"
                    },
                    "database_subnet_tags": {
                      "default": {},
                      "description": "Additional tags for the database subnets"
                    },
                    "database_subnets": {
                      "default": [],
                      "description": "A list of database subnets inside the VPC"
                    },
                    "default_network_acl_egress": {
                      "default": [
                        {
                          "action": "allow",
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_no": "100",
                          "to_port": "0"
                        },
                        {
                          "action": "allow",
                          "from_port": "0",
                          "ipv6_cidr_block": "::/0",
                          "protocol": "-1",
                          "rule_no": "101",
                          "to_port": "0"
                        }
                      ],
                      "description": "List of maps of egress rules to set on the Default Network ACL"
                    },
                    "default_network_acl_ingress": {
                      "default": [
                        {
                          "action": "allow",
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_no": "100",
                          "to_port": "0"
                        },
                        {
                          "action": "allow",
                          "from_port": "0",
                          "ipv6_cidr_block": "::/0",
                          "protocol": "-1",
                          "rule_no": "101",
                          "to_port": "0"
                        }
                      ],
                      "description": "List of maps of ingress rules to set on the Default Network ACL"
                    },
                    "default_network_acl_name": {
                      "default": null,
                      "description": "Name to be used on the Default Network ACL"
                    },
                    "default_network_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the Default Network ACL"
                    },
                    "default_route_table_name": {
                      "default": null,
                      "description": "Name to be used on the default route table"
                    },
                    "default_route_table_propagating_vgws": {
                      "default": [],
                      "description": "List of virtual gateways for propagation"
                    },
                    "default_route_table_routes": {
                      "default": [],
                      "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
                    },
                    "default_route_table_tags": {
                      "default": {},
                      "description": "Additional tags for the default route table"
                    },
                    "default_security_group_egress": {
                      "default": [],
                      "description": "List of maps of egress rules to set on the default security group"
                    },
                    "default_security_group_ingress": {
                      "default": [],
                      "description": "List of maps of ingress rules to set on the default security group"
                    },
                    "default_security_group_name": {
                      "default": null,
                      "description": "Name to be used on the default security group"
                    },
                    "default_security_group_tags": {
                      "default": {},
                      "description": "Additional tags for the default security group"
                    },
                    "default_vpc_enable_dns_hostnames": {
                      "default": true,
                      "description": "Should be true to enable DNS hostnames in the Default VPC"
                    },
                    "default_vpc_enable_dns_support": {
                      "default": true,
                      "description": "Should be true to enable DNS support in the Default VPC"
                    },
                    "default_vpc_name": {
                      "default": null,
                      "description": "Name to be used on the Default VPC"
                    },
                    "default_vpc_tags": {
                      "default": {},
                      "description": "Additional tags for the Default VPC"
                    },
                    "dhcp_options_domain_name": {
                      "default": "",
                      "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
                    },
                    "dhcp_options_domain_name_servers": {
                      "default": [
                        "AmazonProvidedDNS"
                      ],
                      "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
                    },
                    "dhcp_options_netbios_name_servers": {
                      "default": [],
                      "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
                    },
                    "dhcp_options_netbios_node_type": {
                      "default": "",
                      "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
                    },
                    "dhcp_options_ntp_servers": {
                      "default": [],
                      "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
                    },
                    "dhcp_options_tags": {
                      "default": {},
                      "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
                    },
                    "elasticache_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the elasticache subnets network ACL"
                    },
                    "elasticache_dedicated_network_acl": {
                      "default": false,
                      "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
                    },
                    "elasticache_inbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Elasticache subnets inbound network ACL rules"
                    },
                    "elasticache_outbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Elasticache subnets outbound network ACL rules"
                    },
                    "elasticache_route_table_tags": {
                      "default": {},
                      "description": "Additional tags for the elasticache route tables"
                    },
                    "elasticache_subnet_assign_ipv6_address_on_creation": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                    },
                    "elasticache_subnet_enable_dns64": {
                      "default": true,
                      "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                    },
                    "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                      "default": false,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                    },
                    "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                      "default": true,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                    },
                    "elasticache_subnet_group_name": {
                      "default": null,
                      "description": "Name of elasticache subnet group"
                    },
                    "elasticache_subnet_group_tags": {
                      "default": {},
                      "description": "Additional tags for the elasticache subnet group"
                    },
                    "elasticache_subnet_ipv6_native": {
                      "default": false,
                      "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                    },
                    "elasticache_subnet_ipv6_prefixes": {
                      "default": [],
                      "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                    },
                    "elasticache_subnet_names": {
                      "default": [],
                      "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated"
                    },
                    "elasticache_subnet_private_dns_hostname_type_on_launch": {
                      "default": null,
                      "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                    },
                    "elasticache_subnet_suffix": {
                      "default": "elasticache",
                      "description": "Suffix to append to elasticache subnets name"
                    },
                    "elasticache_subnet_tags": {
                      "default": {},
                      "description": "Additional tags for the elasticache subnets"
                    },
                    "elasticache_subnets": {
                      "default": [],
                      "description": "A list of elasticache subnets inside the VPC"
                    },
                    "enable_dhcp_options": {
                      "default": false,
                      "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
                    },
                    "enable_dns_hostnames": {
                      "default": true,
                      "description": "Should be true to enable DNS hostnames in the VPC"
                    },
                    "enable_dns_support": {
                      "default": true,
                      "description": "Should be true to enable DNS support in the VPC"
                    },
                    "enable_flow_log": {
                      "default": false,
                      "description": "Whether or not to enable VPC Flow Logs"
                    },
                    "enable_ipv6": {
                      "default": false,
                      "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block"
                    },
                    "enable_nat_gateway": {
                      "default": false,
                      "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
                    },
                    "enable_network_address_usage_metrics": {
                      "default": null,
                      "description": "Determines whether network address usage metrics are enabled for the VPC"
                    },
                    "enable_public_redshift": {
                      "default": false,
                      "description": "Controls if redshift should have public routing table"
                    },
                    "enable_vpn_gateway": {
                      "default": false,
                      "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
                    },
                    "external_nat_ip_ids": {
                      "default": [],
                      "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
                    },
                    "external_nat_ips": {
                      "default": [],
                      "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
                    },
                    "flow_log_cloudwatch_iam_role_arn": {
                      "default": "",
                      "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided"
                    },
                    "flow_log_cloudwatch_log_group_kms_key_id": {
                      "default": null,
                      "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs"
                    },
                    "flow_log_cloudwatch_log_group_name_prefix": {
                      "default": "/aws/vpc-flow-log/",
                      "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs"
                    },
                    "flow_log_cloudwatch_log_group_name_suffix": {
                      "default": "",
                      "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs"
                    },
                    "flow_log_cloudwatch_log_group_retention_in_days": {
                      "default": null,
                      "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs"
                    },
                    "flow_log_cloudwatch_log_group_skip_destroy": {
                      "default": false,
                      "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state"
                    },
                    "flow_log_deliver_cross_account_role": {
                      "default": null,
                      "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
                    },
                    "flow_log_destination_arn": {
                      "default": "",
                      "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided"
                    },
                    "flow_log_destination_type": {
                      "default": "cloud-watch-logs",
                      "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs"
                    },
                    "flow_log_file_format": {
                      "default": null,
                      "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`"
                    },
                    "flow_log_hive_compatible_partitions": {
                      "default": false,
                      "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3"
                    },
                    "flow_log_log_format": {
                      "default": null,
                      "description": "The fields to include in the flow log record, in the order in which they should appear"
                    },
                    "flow_log_max_aggregation_interval": {
                      "default": 600,
                      "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds"
                    },
                    "flow_log_per_hour_partition": {
                      "default": false,
                      "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries"
                    },
                    "flow_log_traffic_type": {
                      "default": "ALL",
                      "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL"
                    },
                    "igw_tags": {
                      "default": {},
                      "description": "Additional tags for the internet gateway"
                    },
                    "instance_tenancy": {
                      "default": "default",
                      "description": "A tenancy option for instances launched into the VPC"
                    },
                    "intra_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the intra subnets network ACL"
                    },
                    "intra_dedicated_network_acl": {
                      "default": false,
                      "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
                    },
                    "intra_inbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Intra subnets inbound network ACLs"
                    },
                    "intra_outbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Intra subnets outbound network ACLs"
                    },
                    "intra_route_table_tags": {
                      "default": {},
                      "description": "Additional tags for the intra route tables"
                    },
                    "intra_subnet_assign_ipv6_address_on_creation": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                    },
                    "intra_subnet_enable_dns64": {
                      "default": true,
                      "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                    },
                    "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                      "default": false,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                    },
                    "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                      "default": true,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                    },
                    "intra_subnet_ipv6_native": {
                      "default": false,
                      "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                    },
                    "intra_subnet_ipv6_prefixes": {
                      "default": [],
                      "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                    },
                    "intra_subnet_names": {
                      "default": [],
                      "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated"
                    },
                    "intra_subnet_private_dns_hostname_type_on_launch": {
                      "default": null,
                      "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                    },
                    "intra_subnet_suffix": {
                      "default": "intra",
                      "description": "Suffix to append to intra subnets name"
                    },
                    "intra_subnet_tags": {
                      "default": {},
                      "description": "Additional tags for the intra subnets"
                    },
                    "intra_subnets": {
                      "default": [],
                      "description": "A list of intra subnets inside the VPC"
                    },
                    "ipv4_ipam_pool_id": {
                      "default": null,
                      "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR"
                    },
                    "ipv4_netmask_length": {
                      "default": null,
                      "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id"
                    },
                    "ipv6_cidr": {
                      "default": null,
                      "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`"
                    },
                    "ipv6_cidr_block_network_border_group": {
                      "default": null,
                      "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones"
                    },
                    "ipv6_ipam_pool_id": {
                      "default": null,
                      "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`"
                    },
                    "ipv6_netmask_length": {
                      "default": null,
                      "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`"
                    },
                    "manage_default_network_acl": {
                      "default": true,
                      "description": "Should be true to adopt and manage Default Network ACL"
                    },
                    "manage_default_route_table": {
                      "default": true,
                      "description": "Should be true to manage default route table"
                    },
                    "manage_default_security_group": {
                      "default": true,
                      "description": "Should be true to adopt and manage default security group"
                    },
                    "manage_default_vpc": {
                      "default": false,
                      "description": "Should be true to adopt and manage Default VPC"
                    },
                    "map_customer_owned_ip_on_launch": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`"
                    },
                    "map_public_ip_on_launch": {
                      "default": false,
                      "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`"
                    },
                    "name": {
                      "default": "",
                      "description": "Name to be used on all the resources as identifier"
                    },
                    "nat_eip_tags": {
                      "default": {},
                      "description": "Additional tags for the NAT EIP"
                    },
                    "nat_gateway_destination_cidr_block": {
                      "default": "0.0.0.0/0",
                      "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route"
                    },
                    "nat_gateway_tags": {
                      "default": {},
                      "description": "Additional tags for the NAT gateways"
                    },
                    "one_nat_gateway_per_az": {
                      "default": false,
                      "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`"
                    },
                    "outpost_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the outpost subnets network ACL"
                    },
                    "outpost_arn": {
                      "default": null,
                      "description": "ARN of Outpost you want to create a subnet in"
                    },
                    "outpost_az": {
                      "default": null,
                      "description": "AZ where Outpost is anchored"
                    },
                    "outpost_dedicated_network_acl": {
                      "default": false,
                      "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
                    },
                    "outpost_inbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Outpost subnets inbound network ACLs"
                    },
                    "outpost_outbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Outpost subnets outbound network ACLs"
                    },
                    "outpost_subnet_assign_ipv6_address_on_creation": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                    },
                    "outpost_subnet_enable_dns64": {
                      "default": true,
                      "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                    },
                    "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                      "default": false,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                    },
                    "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                      "default": true,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                    },
                    "outpost_subnet_ipv6_native": {
                      "default": false,
                      "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                    },
                    "outpost_subnet_ipv6_prefixes": {
                      "default": [],
                      "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                    },
                    "outpost_subnet_names": {
                      "default": [],
                      "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated"
                    },
                    "outpost_subnet_private_dns_hostname_type_on_launch": {
                      "default": null,
                      "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                    },
                    "outpost_subnet_suffix": {
                      "default": "outpost",
                      "description": "Suffix to append to outpost subnets name"
                    },
                    "outpost_subnet_tags": {
                      "default": {},
                      "description": "Additional tags for the outpost subnets"
                    },
                    "outpost_subnets": {
                      "default": [],
                      "description": "A list of outpost subnets inside the VPC"
                    },
                    "private_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the private subnets network ACL"
                    },
                    "private_dedicated_network_acl": {
                      "default": false,
                      "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
                    },
                    "private_inbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Private subnets inbound network ACLs"
                    },
                    "private_outbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Private subnets outbound network ACLs"
                    },
                    "private_route_table_tags": {
                      "default": {},
                      "description": "Additional tags for the private route tables"
                    },
                    "private_subnet_assign_ipv6_address_on_creation": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                    },
                    "private_subnet_enable_dns64": {
                      "default": true,
                      "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                    },
                    "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                      "default": false,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                    },
                    "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                      "default": true,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                    },
                    "private_subnet_ipv6_native": {
                      "default": false,
                      "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                    },
                    "private_subnet_ipv6_prefixes": {
                      "default": [],
                      "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                    },
                    "private_subnet_names": {
                      "default": [],
                      "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated"
                    },
                    "private_subnet_private_dns_hostname_type_on_launch": {
                      "default": null,
                      "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                    },
                    "private_subnet_suffix": {
                      "default": "private",
                      "description": "Suffix to append to private subnets name"
                    },
                    "private_subnet_tags": {
                      "default": {},
                      "description": "Additional tags for the private subnets"
                    },
                    "private_subnet_tags_per_az": {
                      "default": {},
                      "description": "Additional tags for the private subnets where the primary key is the AZ"
                    },
                    "private_subnets": {
                      "default": [],
                      "description": "A list of private subnets inside the VPC"
                    },
                    "propagate_intra_route_tables_vgw": {
                      "default": false,
                      "description": "Should be true if you want route table propagation"
                    },
                    "propagate_private_route_tables_vgw": {
                      "default": false,
                      "description": "Should be true if you want route table propagation"
                    },
                    "propagate_public_route_tables_vgw": {
                      "default": false,
                      "description": "Should be true if you want route table propagation"
                    },
                    "public_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the public subnets network ACL"
                    },
                    "public_dedicated_network_acl": {
                      "default": false,
                      "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
                    },
                    "public_inbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Public subnets inbound network ACLs"
                    },
                    "public_outbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Public subnets outbound network ACLs"
                    },
                    "public_route_table_tags": {
                      "default": {},
                      "description": "Additional tags for the public route tables"
                    },
                    "public_subnet_assign_ipv6_address_on_creation": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                    },
                    "public_subnet_enable_dns64": {
                      "default": true,
                      "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                    },
                    "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                      "default": false,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                    },
                    "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                      "default": true,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                    },
                    "public_subnet_ipv6_native": {
                      "default": false,
                      "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                    },
                    "public_subnet_ipv6_prefixes": {
                      "default": [],
                      "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                    },
                    "public_subnet_names": {
                      "default": [],
                      "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated"
                    },
                    "public_subnet_private_dns_hostname_type_on_launch": {
                      "default": null,
                      "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                    },
                    "public_subnet_suffix": {
                      "default": "public",
                      "description": "Suffix to append to public subnets name"
                    },
                    "public_subnet_tags": {
                      "default": {},
                      "description": "Additional tags for the public subnets"
                    },
                    "public_subnet_tags_per_az": {
                      "default": {},
                      "description": "Additional tags for the public subnets where the primary key is the AZ"
                    },
                    "public_subnets": {
                      "default": [],
                      "description": "A list of public subnets inside the VPC"
                    },
                    "putin_khuylo": {
                      "default": true,
                      "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                    },
                    "redshift_acl_tags": {
                      "default": {},
                      "description": "Additional tags for the redshift subnets network ACL"
                    },
                    "redshift_dedicated_network_acl": {
                      "default": false,
                      "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
                    },
                    "redshift_inbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Redshift subnets inbound network ACL rules"
                    },
                    "redshift_outbound_acl_rules": {
                      "default": [
                        {
                          "cidr_block": "0.0.0.0/0",
                          "from_port": "0",
                          "protocol": "-1",
                          "rule_action": "allow",
                          "rule_number": "100",
                          "to_port": "0"
                        }
                      ],
                      "description": "Redshift subnets outbound network ACL rules"
                    },
                    "redshift_route_table_tags": {
                      "default": {},
                      "description": "Additional tags for the redshift route tables"
                    },
                    "redshift_subnet_assign_ipv6_address_on_creation": {
                      "default": false,
                      "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                    },
                    "redshift_subnet_enable_dns64": {
                      "default": true,
                      "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                    },
                    "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                      "default": false,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                    },
                    "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                      "default": true,
                      "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                    },
                    "redshift_subnet_group_name": {
                      "default": null,
                      "description": "Name of redshift subnet group"
                    },
                    "redshift_subnet_group_tags": {
                      "default": {},
                      "description": "Additional tags for the redshift subnet group"
                    },
                    "redshift_subnet_ipv6_native": {
                      "default": false,
                      "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                    },
                    "redshift_subnet_ipv6_prefixes": {
                      "default": [],
                      "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                    },
                    "redshift_subnet_names": {
                      "default": [],
                      "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated"
                    },
                    "redshift_subnet_private_dns_hostname_type_on_launch": {
                      "default": null,
                      "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                    },
                    "redshift_subnet_suffix": {
                      "default": "redshift",
                      "description": "Suffix to append to redshift subnets name"
                    },
                    "redshift_subnet_tags": {
                      "default": {},
                      "description": "Additional tags for the redshift subnets"
                    },
                    "redshift_subnets": {
                      "default": [],
                      "description": "A list of redshift subnets inside the VPC"
                    },
                    "reuse_nat_ips": {
                      "default": false,
                      "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
                    },
                    "secondary_cidr_blocks": {
                      "default": [],
                      "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
                    },
                    "single_nat_gateway": {
                      "default": false,
                      "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of tags to add to all resources"
                    },
                    "use_ipam_pool": {
                      "default": false,
                      "description": "Determines whether IPAM pool is used for CIDR allocation"
                    },
                    "vpc_flow_log_permissions_boundary": {
                      "default": null,
                      "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
                    },
                    "vpc_flow_log_tags": {
                      "default": {},
                      "description": "Additional tags for the VPC Flow Logs"
                    },
                    "vpc_tags": {
                      "default": {},
                      "description": "Additional tags for the VPC"
                    },
                    "vpn_gateway_az": {
                      "default": null,
                      "description": "The Availability Zone for the VPN Gateway"
                    },
                    "vpn_gateway_id": {
                      "default": "",
                      "description": "ID of VPN Gateway to attach to the VPC"
                    },
                    "vpn_gateway_tags": {
                      "default": {},
                      "description": "Additional tags for the VPN gateway"
                    }
                  }
                },
                "version_constraint": "5.4.0"
              }
            },
            "variables": {
              "common_tags": {
                "default": {
                  "environment": "dev",
                  "owners": "architect"
                }
              },
              "eks_cluster_name": {},
              "vpc_cidr_block": {
                "description": "VPC CIDR Block"
              },
              "vpc_create_database_subnet_group": {
                "default": true,
                "description": "VPC Create Database Subnet Group"
              },
              "vpc_create_database_subnet_route_table": {
                "default": true,
                "description": "VPC Create Database Subnet Route Table"
              },
              "vpc_database_subnets": {
                "default": [
                  "10.0.151.0/24",
                  "10.0.152.0/24"
                ],
                "description": "VPC Database Subnets"
              },
              "vpc_enable_nat_gateway": {
                "default": true,
                "description": "Enable NAT Gateways for Private Subnets Outbound Communication"
              },
              "vpc_name": {
                "description": "VPC Name"
              },
              "vpc_private_subnets": {
                "default": [
                  "10.0.1.0/24",
                  "10.0.2.0/24"
                ],
                "description": "VPC Private Subnets"
              },
              "vpc_public_subnets": {
                "default": [
                  "10.0.101.0/24",
                  "10.0.102.0/24"
                ],
                "description": "VPC Public Subnets"
              },
              "vpc_single_nat_gateway": {
                "default": true,
                "description": "Enable only single NAT Gateway in one Availability Zone to save costs during our demos"
              }
            }
          }
        }
      },
      "variables": {
        "aws_region": {
          "default": "eu-west-3",
          "description": "Region"
        },
        "cluster_endpoint_private_access": {
          "default": false,
          "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled."
        },
        "cluster_endpoint_public_access": {
          "default": true,
          "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled. When it's set to `false` ensure to have a proper private access with `cluster_endpoint_private_access = true`."
        },
        "cluster_endpoint_public_access_cidrs": {
          "default": [
            "0.0.0.0/0"
          ],
          "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint."
        },
        "cluster_name": {
          "default": "eks-sockshop",
          "description": "Name of the EKS cluster. Also used as a prefix in names of related resources."
        },
        "cluster_service_ipv4_cidr": {
          "default": null,
          "description": "service ipv4 cidr for the kubernetes cluster"
        },
        "cluster_version": {
          "default": null,
          "description": "Kubernetes minor version to use for the EKS cluster (for example 1.21)"
        },
        "environment": {
          "default": "dev",
          "description": "Environment use as a prefix"
        },
        "instance_keypair": {
          "default": "eks-terraform-key",
          "description": "AWS EC2 Key pair that need to be associated with EC2 Instance"
        },
        "instance_type": {
          "default": "t3.micro",
          "description": "EC2 Instance Type"
        },
        "office": {
          "default": "sockshop",
          "description": "Office"
        },
        "vpc_cidr_block": {
          "default": "10.0.0.0/16",
          "description": "VPC CIDR Block"
        },
        "vpc_create_database_subnet_group": {
          "default": true,
          "description": "VPC Create Database Subnet Group"
        },
        "vpc_create_database_subnet_route_table": {
          "default": true,
          "description": "VPC Create Database Subnet Route Table"
        },
        "vpc_database_subnets": {
          "default": [
            "10.0.151.0/24",
            "10.0.152.0/24"
          ],
          "description": "VPC Database Subnets"
        },
        "vpc_enable_nat_gateway": {
          "default": true,
          "description": "Enable NAT Gateways for Private Subnets Outbound Communication"
        },
        "vpc_name": {
          "default": "vpc",
          "description": "VPC Name"
        },
        "vpc_private_subnets": {
          "default": [
            "10.0.1.0/24",
            "10.0.2.0/24"
          ],
          "description": "VPC Private Subnets"
        },
        "vpc_public_subnets": {
          "default": [
            "10.0.101.0/24",
            "10.0.102.0/24"
          ],
          "description": "VPC Public Subnets"
        },
        "vpc_single_nat_gateway": {
          "default": true,
          "description": "Enable only single NAT Gateway in one Availability Zone to save costs during our demos"
        }
      }
    }
  },
  "relevant_attributes": [
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "instance_tenancy"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_eip.nat",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table_association.database",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table_association.elasticache",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "certificate_authority",
        0,
        "data"
      ]
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.database[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.outpost[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.aws_iam_role.eks_master_role",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_nat_gateway.this",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_security_group_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table.intra",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_internet_gateway.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "vpc_config",
        0,
        "cluster_security_group_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "enable_dns_hostnames"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "owner_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route.private_ipv6_egress",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "instance_tenancy"
      ]
    },
    {
      "resource": "module.eks.aws_iam_user.eksadmin_user",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.private[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.elasticache[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "endpoint"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table.redshift",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_flow_log.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route.public_internet_gateway_ipv6[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.data.aws_caller_identity.current",
      "attribute": [
        "account_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.private[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_subnet.database",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_subnet.public",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_iam_user.admin_user",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "identity",
        0,
        "oidc",
        0,
        "issuer"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.redshift[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "enable_dns_hostnames"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_route_table_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table_association.redshift_public",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.oidc.aws_iam_openid_connect_provider.oidc_provider",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table.public",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_iam_role.eks_nodegroup_role",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_internet_gateway.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.eks.aws_iam_user.basic_user",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "main_route_table_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.aws_iam_user.admin_user",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc_dhcp_options.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.oidc.data.aws_partition.current",
      "attribute": [
        "dns_suffix"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "ipv6_association_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_egress_only_internet_gateway.this",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_redshift_subnet_group.redshift[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "main_route_table_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "enable_dns_support"
      ]
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_elasticache_subnet_group.elasticache[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "default_security_group_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_cloudwatch_log_group.flow_log[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_flow_log.this[0]",
      "attribute": [
        "deliver_cross_account_role"
      ]
    },
    {
      "resource": "module.vpc.data.aws_availability_zones.available",
      "attribute": [
        "names"
      ]
    },
    {
      "resource": "module.eks.aws_iam_role.eks_master_role",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table_association.private",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table.elasticache",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_db_subnet_group.database[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_subnet.outpost",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_eks_node_group.eks_ng_private",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_elasticache_subnet_group.elasticache[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_db_subnet_group.database[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table_association.public",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_iam_user.basic_user",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.database[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.redshift[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "default_network_acl_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table.database",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table.private",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table_association.intra",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.outpost[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpn_gateway.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table.public[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route_table_association.redshift",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "default_network_acl_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "cidr_block"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "cidr_block"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route.database_internet_gateway[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.aws_eks_node_group.eks_ng_private",
      "attribute": [
        "status"
      ]
    },
    {
      "resource": "module.eks.aws_eks_cluster.eks_cluster",
      "attribute": [
        "version"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.public[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.intra[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "default_route_table_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_default_vpc.this[0]",
      "attribute": [
        "enable_dns_support"
      ]
    },
    {
      "resource": "module.eks.aws_iam_group.eksadmins_iam_group",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.eks.aws_iam_role.eks_admin_role",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpn_gateway.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpn_gateway_attachment.this[0]",
      "attribute": [
        "vpn_gateway_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.elasticache[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
      "attribute": [
        "vpc_id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_vpc.this[0]",
      "attribute": [
        "ipv6_cidr_block"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route.database_nat_gateway",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_route.private_nat_gateway",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_route.public_internet_gateway[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.aws_eks_node_group.eks_ng_private",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_egress_only_internet_gateway.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.eks.aws_eks_node_group.eks_ng_private",
      "attribute": [
        "version"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_route.database_ipv6_egress[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_subnet.elasticache",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_customer_gateway.this",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_subnet.intra",
      "attribute": []
    },
    {
      "resource": "module.eks.aws_iam_role.eks_nodegroup_role",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_subnet.redshift",
      "attribute": []
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.intra[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_network_acl.public[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.vpc.module.vpc.aws_subnet.private",
      "attribute": []
    }
  ],
  "timestamp": "2024-06-04T09:12:54Z",
  "applyable": true,
  "complete": true,
  "errored": false
}
